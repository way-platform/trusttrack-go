// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/trusttrack/v1/driver.proto

package trusttrackv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The type of identifier.
type DriverIdentifier_IdentifierType int32

const (
	// Unspecified identifier type (unused).
	DriverIdentifier_IDENTIFIER_TYPE_UNSPECIFIED DriverIdentifier_IdentifierType = 0
	// Unknown identifier type.
	DriverIdentifier_IDENTIFIER_TYPE_UNKNOWN DriverIdentifier_IdentifierType = 1
	// DLT identifier.
	DriverIdentifier_DLT DriverIdentifier_IdentifierType = 2
	// Tachograph identifier.
	DriverIdentifier_TACHOGRAPH DriverIdentifier_IdentifierType = 3
	// Wireless identifier.
	DriverIdentifier_WIRELESS DriverIdentifier_IdentifierType = 4
	// iButton identifier.
	DriverIdentifier_IBUTTON DriverIdentifier_IdentifierType = 5
)

// Enum value maps for DriverIdentifier_IdentifierType.
var (
	DriverIdentifier_IdentifierType_name = map[int32]string{
		0: "IDENTIFIER_TYPE_UNSPECIFIED",
		1: "IDENTIFIER_TYPE_UNKNOWN",
		2: "DLT",
		3: "TACHOGRAPH",
		4: "WIRELESS",
		5: "IBUTTON",
	}
	DriverIdentifier_IdentifierType_value = map[string]int32{
		"IDENTIFIER_TYPE_UNSPECIFIED": 0,
		"IDENTIFIER_TYPE_UNKNOWN":     1,
		"DLT":                         2,
		"TACHOGRAPH":                  3,
		"WIRELESS":                    4,
		"IBUTTON":                     5,
	}
)

func (x DriverIdentifier_IdentifierType) Enum() *DriverIdentifier_IdentifierType {
	p := new(DriverIdentifier_IdentifierType)
	*p = x
	return p
}

func (x DriverIdentifier_IdentifierType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DriverIdentifier_IdentifierType) Descriptor() protoreflect.EnumDescriptor {
	return file_wayplatform_connect_trusttrack_v1_driver_proto_enumTypes[0].Descriptor()
}

func (DriverIdentifier_IdentifierType) Type() protoreflect.EnumType {
	return &file_wayplatform_connect_trusttrack_v1_driver_proto_enumTypes[0]
}

func (x DriverIdentifier_IdentifierType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// A driver.
type Driver struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_FirstName   *string                `protobuf:"bytes,2,opt,name=first_name,json=firstName"`
	xxx_hidden_LastName    *string                `protobuf:"bytes,3,opt,name=last_name,json=lastName"`
	xxx_hidden_Address     *string                `protobuf:"bytes,4,opt,name=address"`
	xxx_hidden_Phone       *string                `protobuf:"bytes,5,opt,name=phone"`
	xxx_hidden_Identifiers *[]*DriverIdentifier   `protobuf:"bytes,6,rep,name=identifiers"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Driver) Reset() {
	*x = Driver{}
	mi := &file_wayplatform_connect_trusttrack_v1_driver_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Driver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Driver) ProtoMessage() {}

func (x *Driver) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_trusttrack_v1_driver_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Driver) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *Driver) GetFirstName() string {
	if x != nil {
		if x.xxx_hidden_FirstName != nil {
			return *x.xxx_hidden_FirstName
		}
		return ""
	}
	return ""
}

func (x *Driver) GetLastName() string {
	if x != nil {
		if x.xxx_hidden_LastName != nil {
			return *x.xxx_hidden_LastName
		}
		return ""
	}
	return ""
}

func (x *Driver) GetAddress() string {
	if x != nil {
		if x.xxx_hidden_Address != nil {
			return *x.xxx_hidden_Address
		}
		return ""
	}
	return ""
}

func (x *Driver) GetPhone() string {
	if x != nil {
		if x.xxx_hidden_Phone != nil {
			return *x.xxx_hidden_Phone
		}
		return ""
	}
	return ""
}

func (x *Driver) GetIdentifiers() []*DriverIdentifier {
	if x != nil {
		if x.xxx_hidden_Identifiers != nil {
			return *x.xxx_hidden_Identifiers
		}
	}
	return nil
}

func (x *Driver) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *Driver) SetFirstName(v string) {
	x.xxx_hidden_FirstName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *Driver) SetLastName(v string) {
	x.xxx_hidden_LastName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *Driver) SetAddress(v string) {
	x.xxx_hidden_Address = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *Driver) SetPhone(v string) {
	x.xxx_hidden_Phone = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *Driver) SetIdentifiers(v []*DriverIdentifier) {
	x.xxx_hidden_Identifiers = &v
}

func (x *Driver) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Driver) HasFirstName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Driver) HasLastName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Driver) HasAddress() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Driver) HasPhone() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Driver) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *Driver) ClearFirstName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FirstName = nil
}

func (x *Driver) ClearLastName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_LastName = nil
}

func (x *Driver) ClearAddress() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Address = nil
}

func (x *Driver) ClearPhone() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Phone = nil
}

type Driver_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The ID of the driver.
	Id *string
	// The first name of the driver.
	FirstName *string
	// The last name of the driver.
	LastName *string
	// The address of the driver.
	Address *string
	// The phone number of the driver.
	Phone *string
	// The identifiers for the driver.
	Identifiers []*DriverIdentifier
}

func (b0 Driver_builder) Build() *Driver {
	m0 := &Driver{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Id = b.Id
	}
	if b.FirstName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_FirstName = b.FirstName
	}
	if b.LastName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_LastName = b.LastName
	}
	if b.Address != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_Address = b.Address
	}
	if b.Phone != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_Phone = b.Phone
	}
	x.xxx_hidden_Identifiers = &b.Identifiers
	return m0
}

// A driver identifier.
type DriverIdentifier struct {
	state                            protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_Identifier            *string                         `protobuf:"bytes,1,opt,name=identifier"`
	xxx_hidden_Type                  DriverIdentifier_IdentifierType `protobuf:"varint,2,opt,name=type,enum=wayplatform.connect.trusttrack.v1.DriverIdentifier_IdentifierType"`
	xxx_hidden_UnknownIdentifierType *string                         `protobuf:"bytes,3,opt,name=unknown_identifier_type,json=unknownIdentifierType"`
	XXX_raceDetectHookData           protoimpl.RaceDetectHookData
	XXX_presence                     [1]uint32
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *DriverIdentifier) Reset() {
	*x = DriverIdentifier{}
	mi := &file_wayplatform_connect_trusttrack_v1_driver_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverIdentifier) ProtoMessage() {}

func (x *DriverIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_trusttrack_v1_driver_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DriverIdentifier) GetIdentifier() string {
	if x != nil {
		if x.xxx_hidden_Identifier != nil {
			return *x.xxx_hidden_Identifier
		}
		return ""
	}
	return ""
}

func (x *DriverIdentifier) GetType() DriverIdentifier_IdentifierType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Type
		}
	}
	return DriverIdentifier_IDENTIFIER_TYPE_UNSPECIFIED
}

func (x *DriverIdentifier) GetUnknownIdentifierType() string {
	if x != nil {
		if x.xxx_hidden_UnknownIdentifierType != nil {
			return *x.xxx_hidden_UnknownIdentifierType
		}
		return ""
	}
	return ""
}

func (x *DriverIdentifier) SetIdentifier(v string) {
	x.xxx_hidden_Identifier = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *DriverIdentifier) SetType(v DriverIdentifier_IdentifierType) {
	x.xxx_hidden_Type = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *DriverIdentifier) SetUnknownIdentifierType(v string) {
	x.xxx_hidden_UnknownIdentifierType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *DriverIdentifier) HasIdentifier() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DriverIdentifier) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DriverIdentifier) HasUnknownIdentifierType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DriverIdentifier) ClearIdentifier() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Identifier = nil
}

func (x *DriverIdentifier) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Type = DriverIdentifier_IDENTIFIER_TYPE_UNSPECIFIED
}

func (x *DriverIdentifier) ClearUnknownIdentifierType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_UnknownIdentifierType = nil
}

type DriverIdentifier_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The identifier code.
	Identifier *string
	// The type of identifier.
	Type *DriverIdentifier_IdentifierType
	// Unknown identifier type value.
	// Set when type is IDENTIFIER_TYPE_UNKNOWN.
	UnknownIdentifierType *string
}

func (b0 DriverIdentifier_builder) Build() *DriverIdentifier {
	m0 := &DriverIdentifier{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Identifier != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Identifier = b.Identifier
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Type = *b.Type
	}
	if b.UnknownIdentifierType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_UnknownIdentifierType = b.UnknownIdentifierType
	}
	return m0
}

var File_wayplatform_connect_trusttrack_v1_driver_proto protoreflect.FileDescriptor

const file_wayplatform_connect_trusttrack_v1_driver_proto_rawDesc = "" +
	"\n" +
	".wayplatform/connect/trusttrack/v1/driver.proto\x12!wayplatform.connect.trusttrack.v1\x1a\x1bbuf/validate/validate.proto\"\xe3\x01\n" +
	"\x06Driver\x12\x16\n" +
	"\x02id\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\x02id\x12\x1d\n" +
	"\n" +
	"first_name\x18\x02 \x01(\tR\tfirstName\x12\x1b\n" +
	"\tlast_name\x18\x03 \x01(\tR\blastName\x12\x18\n" +
	"\aaddress\x18\x04 \x01(\tR\aaddress\x12\x14\n" +
	"\x05phone\x18\x05 \x01(\tR\x05phone\x12U\n" +
	"\videntifiers\x18\x06 \x03(\v23.wayplatform.connect.trusttrack.v1.DriverIdentifierR\videntifiers\"\xc7\x02\n" +
	"\x10DriverIdentifier\x12\x1e\n" +
	"\n" +
	"identifier\x18\x01 \x01(\tR\n" +
	"identifier\x12V\n" +
	"\x04type\x18\x02 \x01(\x0e2B.wayplatform.connect.trusttrack.v1.DriverIdentifier.IdentifierTypeR\x04type\x126\n" +
	"\x17unknown_identifier_type\x18\x03 \x01(\tR\x15unknownIdentifierType\"\x82\x01\n" +
	"\x0eIdentifierType\x12\x1f\n" +
	"\x1bIDENTIFIER_TYPE_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17IDENTIFIER_TYPE_UNKNOWN\x10\x01\x12\a\n" +
	"\x03DLT\x10\x02\x12\x0e\n" +
	"\n" +
	"TACHOGRAPH\x10\x03\x12\f\n" +
	"\bWIRELESS\x10\x04\x12\v\n" +
	"\aIBUTTON\x10\x05B\xbe\x02\n" +
	"%com.wayplatform.connect.trusttrack.v1B\vDriverProtoP\x01Zagithub.com/way-platform/trusttrack-go/proto/gen/go/wayplatform/connect/trusttrack/v1;trusttrackv1\xa2\x02\x03WCT\xaa\x02!Wayplatform.Connect.Trusttrack.V1\xca\x02!Wayplatform\\Connect\\Trusttrack\\V1\xe2\x02-Wayplatform\\Connect\\Trusttrack\\V1\\GPBMetadata\xea\x02$Wayplatform::Connect::Trusttrack::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_trusttrack_v1_driver_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_wayplatform_connect_trusttrack_v1_driver_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_wayplatform_connect_trusttrack_v1_driver_proto_goTypes = []any{
	(DriverIdentifier_IdentifierType)(0), // 0: wayplatform.connect.trusttrack.v1.DriverIdentifier.IdentifierType
	(*Driver)(nil),                       // 1: wayplatform.connect.trusttrack.v1.Driver
	(*DriverIdentifier)(nil),             // 2: wayplatform.connect.trusttrack.v1.DriverIdentifier
}
var file_wayplatform_connect_trusttrack_v1_driver_proto_depIdxs = []int32{
	2, // 0: wayplatform.connect.trusttrack.v1.Driver.identifiers:type_name -> wayplatform.connect.trusttrack.v1.DriverIdentifier
	0, // 1: wayplatform.connect.trusttrack.v1.DriverIdentifier.type:type_name -> wayplatform.connect.trusttrack.v1.DriverIdentifier.IdentifierType
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_trusttrack_v1_driver_proto_init() }
func file_wayplatform_connect_trusttrack_v1_driver_proto_init() {
	if File_wayplatform_connect_trusttrack_v1_driver_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_trusttrack_v1_driver_proto_rawDesc), len(file_wayplatform_connect_trusttrack_v1_driver_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_trusttrack_v1_driver_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_trusttrack_v1_driver_proto_depIdxs,
		EnumInfos:         file_wayplatform_connect_trusttrack_v1_driver_proto_enumTypes,
		MessageInfos:      file_wayplatform_connect_trusttrack_v1_driver_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_trusttrack_v1_driver_proto = out.File
	file_wayplatform_connect_trusttrack_v1_driver_proto_goTypes = nil
	file_wayplatform_connect_trusttrack_v1_driver_proto_depIdxs = nil
}
