// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: wayplatform/connect/trusttrack/v1/coordinate.proto

package trusttrackv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A coordinate with telemetry data from object coordinates history API v2.
type Coordinate struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ObjectId         *string                `protobuf:"bytes,1,opt,name=object_id,json=objectId"`
	xxx_hidden_VehicleTime      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=vehicle_time,json=vehicleTime"`
	xxx_hidden_IgnitionState    IgnitionState          `protobuf:"varint,3,opt,name=ignition_state,json=ignitionState,enum=wayplatform.connect.trusttrack.v1.IgnitionState"`
	xxx_hidden_TripType         TripType               `protobuf:"varint,4,opt,name=trip_type,json=tripType,enum=wayplatform.connect.trusttrack.v1.TripType"`
	xxx_hidden_Position         *Position              `protobuf:"bytes,5,opt,name=position"`
	xxx_hidden_GeozoneIds       []string               `protobuf:"bytes,6,rep,name=geozone_ids,json=geozoneIds"`
	xxx_hidden_CalculatedInputs *CalculatedInputs      `protobuf:"bytes,7,opt,name=calculated_inputs,json=calculatedInputs"`
	xxx_hidden_DeviceInputs     *DeviceInputs          `protobuf:"bytes,8,opt,name=device_inputs,json=deviceInputs"`
	xxx_hidden_Tires            map[string]*TireData   `protobuf:"bytes,9,rep,name=tires" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Other            *OtherInputs           `protobuf:"bytes,10,opt,name=other"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *Coordinate) Reset() {
	*x = Coordinate{}
	mi := &file_wayplatform_connect_trusttrack_v1_coordinate_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Coordinate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coordinate) ProtoMessage() {}

func (x *Coordinate) ProtoReflect() protoreflect.Message {
	mi := &file_wayplatform_connect_trusttrack_v1_coordinate_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Coordinate) GetObjectId() string {
	if x != nil {
		if x.xxx_hidden_ObjectId != nil {
			return *x.xxx_hidden_ObjectId
		}
		return ""
	}
	return ""
}

func (x *Coordinate) GetVehicleTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_VehicleTime
	}
	return nil
}

func (x *Coordinate) GetIgnitionState() IgnitionState {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			return x.xxx_hidden_IgnitionState
		}
	}
	return IgnitionState_IGNITION_STATE_UNSPECIFIED
}

func (x *Coordinate) GetTripType() TripType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 3) {
			return x.xxx_hidden_TripType
		}
	}
	return TripType_TRIP_TYPE_UNSPECIFIED
}

func (x *Coordinate) GetPosition() *Position {
	if x != nil {
		return x.xxx_hidden_Position
	}
	return nil
}

func (x *Coordinate) GetGeozoneIds() []string {
	if x != nil {
		return x.xxx_hidden_GeozoneIds
	}
	return nil
}

func (x *Coordinate) GetCalculatedInputs() *CalculatedInputs {
	if x != nil {
		return x.xxx_hidden_CalculatedInputs
	}
	return nil
}

func (x *Coordinate) GetDeviceInputs() *DeviceInputs {
	if x != nil {
		return x.xxx_hidden_DeviceInputs
	}
	return nil
}

func (x *Coordinate) GetTires() map[string]*TireData {
	if x != nil {
		return x.xxx_hidden_Tires
	}
	return nil
}

func (x *Coordinate) GetOther() *OtherInputs {
	if x != nil {
		return x.xxx_hidden_Other
	}
	return nil
}

func (x *Coordinate) SetObjectId(v string) {
	x.xxx_hidden_ObjectId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 10)
}

func (x *Coordinate) SetVehicleTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_VehicleTime = v
}

func (x *Coordinate) SetIgnitionState(v IgnitionState) {
	x.xxx_hidden_IgnitionState = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 10)
}

func (x *Coordinate) SetTripType(v TripType) {
	x.xxx_hidden_TripType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 10)
}

func (x *Coordinate) SetPosition(v *Position) {
	x.xxx_hidden_Position = v
}

func (x *Coordinate) SetGeozoneIds(v []string) {
	x.xxx_hidden_GeozoneIds = v
}

func (x *Coordinate) SetCalculatedInputs(v *CalculatedInputs) {
	x.xxx_hidden_CalculatedInputs = v
}

func (x *Coordinate) SetDeviceInputs(v *DeviceInputs) {
	x.xxx_hidden_DeviceInputs = v
}

func (x *Coordinate) SetTires(v map[string]*TireData) {
	x.xxx_hidden_Tires = v
}

func (x *Coordinate) SetOther(v *OtherInputs) {
	x.xxx_hidden_Other = v
}

func (x *Coordinate) HasObjectId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Coordinate) HasVehicleTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_VehicleTime != nil
}

func (x *Coordinate) HasIgnitionState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Coordinate) HasTripType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Coordinate) HasPosition() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Position != nil
}

func (x *Coordinate) HasCalculatedInputs() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CalculatedInputs != nil
}

func (x *Coordinate) HasDeviceInputs() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DeviceInputs != nil
}

func (x *Coordinate) HasOther() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Other != nil
}

func (x *Coordinate) ClearObjectId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ObjectId = nil
}

func (x *Coordinate) ClearVehicleTime() {
	x.xxx_hidden_VehicleTime = nil
}

func (x *Coordinate) ClearIgnitionState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_IgnitionState = IgnitionState_IGNITION_STATE_UNSPECIFIED
}

func (x *Coordinate) ClearTripType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_TripType = TripType_TRIP_TYPE_UNSPECIFIED
}

func (x *Coordinate) ClearPosition() {
	x.xxx_hidden_Position = nil
}

func (x *Coordinate) ClearCalculatedInputs() {
	x.xxx_hidden_CalculatedInputs = nil
}

func (x *Coordinate) ClearDeviceInputs() {
	x.xxx_hidden_DeviceInputs = nil
}

func (x *Coordinate) ClearOther() {
	x.xxx_hidden_Other = nil
}

type Coordinate_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Object identifier
	ObjectId *string
	// Date and time point of coordinate generated in hardware.
	VehicleTime *timestamppb.Timestamp
	// Indicates if the object's ignition is on
	IgnitionState *IgnitionState
	// Trip type
	TripType *TripType
	// GPS position data.
	Position *Position
	// Container for all geozones IDs.
	GeozoneIds []string
	// Container for parameters calculated in the system from other parameters according to the configuration.
	CalculatedInputs *CalculatedInputs
	// Container for parameters received from hardware.
	DeviceInputs *DeviceInputs
	// Container for TPMS parameters received from device.
	Tires map[string]*TireData
	// Container for other system parameters.
	Other *OtherInputs
}

func (b0 Coordinate_builder) Build() *Coordinate {
	m0 := &Coordinate{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ObjectId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 10)
		x.xxx_hidden_ObjectId = b.ObjectId
	}
	x.xxx_hidden_VehicleTime = b.VehicleTime
	if b.IgnitionState != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 10)
		x.xxx_hidden_IgnitionState = *b.IgnitionState
	}
	if b.TripType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 10)
		x.xxx_hidden_TripType = *b.TripType
	}
	x.xxx_hidden_Position = b.Position
	x.xxx_hidden_GeozoneIds = b.GeozoneIds
	x.xxx_hidden_CalculatedInputs = b.CalculatedInputs
	x.xxx_hidden_DeviceInputs = b.DeviceInputs
	x.xxx_hidden_Tires = b.Tires
	x.xxx_hidden_Other = b.Other
	return m0
}

var File_wayplatform_connect_trusttrack_v1_coordinate_proto protoreflect.FileDescriptor

const file_wayplatform_connect_trusttrack_v1_coordinate_proto_rawDesc = "" +
	"\n" +
	"2wayplatform/connect/trusttrack/v1/coordinate.proto\x12!wayplatform.connect.trusttrack.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a9wayplatform/connect/trusttrack/v1/calculated_inputs.proto\x1a5wayplatform/connect/trusttrack/v1/device_inputs.proto\x1a6wayplatform/connect/trusttrack/v1/ignition_state.proto\x1a4wayplatform/connect/trusttrack/v1/other_inputs.proto\x1a0wayplatform/connect/trusttrack/v1/position.proto\x1a1wayplatform/connect/trusttrack/v1/tire_data.proto\x1a1wayplatform/connect/trusttrack/v1/trip_type.proto\"\xaa\x06\n" +
	"\n" +
	"Coordinate\x12\x1b\n" +
	"\tobject_id\x18\x01 \x01(\tR\bobjectId\x12=\n" +
	"\fvehicle_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\vvehicleTime\x12W\n" +
	"\x0eignition_state\x18\x03 \x01(\x0e20.wayplatform.connect.trusttrack.v1.IgnitionStateR\rignitionState\x12H\n" +
	"\ttrip_type\x18\x04 \x01(\x0e2+.wayplatform.connect.trusttrack.v1.TripTypeR\btripType\x12G\n" +
	"\bposition\x18\x05 \x01(\v2+.wayplatform.connect.trusttrack.v1.PositionR\bposition\x12\x1f\n" +
	"\vgeozone_ids\x18\x06 \x03(\tR\n" +
	"geozoneIds\x12`\n" +
	"\x11calculated_inputs\x18\a \x01(\v23.wayplatform.connect.trusttrack.v1.CalculatedInputsR\x10calculatedInputs\x12T\n" +
	"\rdevice_inputs\x18\b \x01(\v2/.wayplatform.connect.trusttrack.v1.DeviceInputsR\fdeviceInputs\x12N\n" +
	"\x05tires\x18\t \x03(\v28.wayplatform.connect.trusttrack.v1.Coordinate.TiresEntryR\x05tires\x12D\n" +
	"\x05other\x18\n" +
	" \x01(\v2..wayplatform.connect.trusttrack.v1.OtherInputsR\x05other\x1ae\n" +
	"\n" +
	"TiresEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12A\n" +
	"\x05value\x18\x02 \x01(\v2+.wayplatform.connect.trusttrack.v1.TireDataR\x05value:\x028\x01B\xc2\x02\n" +
	"%com.wayplatform.connect.trusttrack.v1B\x0fCoordinateProtoP\x01Zagithub.com/way-platform/trusttrack-go/proto/gen/go/wayplatform/connect/trusttrack/v1;trusttrackv1\xa2\x02\x03WCT\xaa\x02!Wayplatform.Connect.Trusttrack.V1\xca\x02!Wayplatform\\Connect\\Trusttrack\\V1\xe2\x02-Wayplatform\\Connect\\Trusttrack\\V1\\GPBMetadata\xea\x02$Wayplatform::Connect::Trusttrack::V1b\beditionsp\xe8\a"

var file_wayplatform_connect_trusttrack_v1_coordinate_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_wayplatform_connect_trusttrack_v1_coordinate_proto_goTypes = []any{
	(*Coordinate)(nil),            // 0: wayplatform.connect.trusttrack.v1.Coordinate
	nil,                           // 1: wayplatform.connect.trusttrack.v1.Coordinate.TiresEntry
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
	(IgnitionState)(0),            // 3: wayplatform.connect.trusttrack.v1.IgnitionState
	(TripType)(0),                 // 4: wayplatform.connect.trusttrack.v1.TripType
	(*Position)(nil),              // 5: wayplatform.connect.trusttrack.v1.Position
	(*CalculatedInputs)(nil),      // 6: wayplatform.connect.trusttrack.v1.CalculatedInputs
	(*DeviceInputs)(nil),          // 7: wayplatform.connect.trusttrack.v1.DeviceInputs
	(*OtherInputs)(nil),           // 8: wayplatform.connect.trusttrack.v1.OtherInputs
	(*TireData)(nil),              // 9: wayplatform.connect.trusttrack.v1.TireData
}
var file_wayplatform_connect_trusttrack_v1_coordinate_proto_depIdxs = []int32{
	2, // 0: wayplatform.connect.trusttrack.v1.Coordinate.vehicle_time:type_name -> google.protobuf.Timestamp
	3, // 1: wayplatform.connect.trusttrack.v1.Coordinate.ignition_state:type_name -> wayplatform.connect.trusttrack.v1.IgnitionState
	4, // 2: wayplatform.connect.trusttrack.v1.Coordinate.trip_type:type_name -> wayplatform.connect.trusttrack.v1.TripType
	5, // 3: wayplatform.connect.trusttrack.v1.Coordinate.position:type_name -> wayplatform.connect.trusttrack.v1.Position
	6, // 4: wayplatform.connect.trusttrack.v1.Coordinate.calculated_inputs:type_name -> wayplatform.connect.trusttrack.v1.CalculatedInputs
	7, // 5: wayplatform.connect.trusttrack.v1.Coordinate.device_inputs:type_name -> wayplatform.connect.trusttrack.v1.DeviceInputs
	1, // 6: wayplatform.connect.trusttrack.v1.Coordinate.tires:type_name -> wayplatform.connect.trusttrack.v1.Coordinate.TiresEntry
	8, // 7: wayplatform.connect.trusttrack.v1.Coordinate.other:type_name -> wayplatform.connect.trusttrack.v1.OtherInputs
	9, // 8: wayplatform.connect.trusttrack.v1.Coordinate.TiresEntry.value:type_name -> wayplatform.connect.trusttrack.v1.TireData
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_wayplatform_connect_trusttrack_v1_coordinate_proto_init() }
func file_wayplatform_connect_trusttrack_v1_coordinate_proto_init() {
	if File_wayplatform_connect_trusttrack_v1_coordinate_proto != nil {
		return
	}
	file_wayplatform_connect_trusttrack_v1_calculated_inputs_proto_init()
	file_wayplatform_connect_trusttrack_v1_device_inputs_proto_init()
	file_wayplatform_connect_trusttrack_v1_ignition_state_proto_init()
	file_wayplatform_connect_trusttrack_v1_other_inputs_proto_init()
	file_wayplatform_connect_trusttrack_v1_position_proto_init()
	file_wayplatform_connect_trusttrack_v1_tire_data_proto_init()
	file_wayplatform_connect_trusttrack_v1_trip_type_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wayplatform_connect_trusttrack_v1_coordinate_proto_rawDesc), len(file_wayplatform_connect_trusttrack_v1_coordinate_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wayplatform_connect_trusttrack_v1_coordinate_proto_goTypes,
		DependencyIndexes: file_wayplatform_connect_trusttrack_v1_coordinate_proto_depIdxs,
		MessageInfos:      file_wayplatform_connect_trusttrack_v1_coordinate_proto_msgTypes,
	}.Build()
	File_wayplatform_connect_trusttrack_v1_coordinate_proto = out.File
	file_wayplatform_connect_trusttrack_v1_coordinate_proto_goTypes = nil
	file_wayplatform_connect_trusttrack_v1_coordinate_proto_depIdxs = nil
}
