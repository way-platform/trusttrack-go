// Package ttoapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package ttoapi

import (
	"time"
)

// Defines values for CoordinateIgnitionStatus.
const (
	CoordinateIgnitionStatusOFF     CoordinateIgnitionStatus = "OFF"
	CoordinateIgnitionStatusON      CoordinateIgnitionStatus = "ON"
	CoordinateIgnitionStatusUNKNOWN CoordinateIgnitionStatus = "UNKNOWN"
)

// Defines values for CoordinateTripType.
const (
	CoordinateTripTypeBUSINESS CoordinateTripType = "BUSINESS"
	CoordinateTripTypeNONE     CoordinateTripType = "NONE"
	CoordinateTripTypePRIVATE  CoordinateTripType = "PRIVATE"
	CoordinateTripTypeUNKNOWN  CoordinateTripType = "UNKNOWN"
	CoordinateTripTypeWORK     CoordinateTripType = "WORK"
)

// Defines values for CrsType.
const (
	CrsTypeLink CrsType = "link"
	CrsTypeName CrsType = "name"
)

// Defines values for CurrentDayDrivingStatus.
const (
	CurrentDayDrivingStatusCREW    CurrentDayDrivingStatus = "CREW"
	CurrentDayDrivingStatusSINGLE  CurrentDayDrivingStatus = "SINGLE"
	CurrentDayDrivingStatusUNKNOWN CurrentDayDrivingStatus = "UNKNOWN"
)

// Defines values for CurrentDriverInfoType.
const (
	CurrentDriverInfoTypePRIMARY   CurrentDriverInfoType = "PRIMARY"
	CurrentDriverInfoTypeSECONDARY CurrentDriverInfoType = "SECONDARY"
	CurrentDriverInfoTypeUNKNOWN   CurrentDriverInfoType = "UNKNOWN"
)

// Defines values for DetectedEventTripType.
const (
	DetectedEventTripTypeBUSINESS DetectedEventTripType = "BUSINESS"
	DetectedEventTripTypeNONE     DetectedEventTripType = "NONE"
	DetectedEventTripTypePRIVATE  DetectedEventTripType = "PRIVATE"
	DetectedEventTripTypeUNKNOWN  DetectedEventTripType = "UNKNOWN"
	DetectedEventTripTypeWORK     DetectedEventTripType = "WORK"
)

// Defines values for DriverCardTachoScheduleRequestSlot.
const (
	DriverCardTachoScheduleRequestSlotDRIVERCARDFIRSTSLOT  DriverCardTachoScheduleRequestSlot = "DRIVER_CARD_FIRST_SLOT"
	DriverCardTachoScheduleRequestSlotDRIVERCARDSECONDSLOT DriverCardTachoScheduleRequestSlot = "DRIVER_CARD_SECOND_SLOT"
)

// Defines values for ExternalDriverStateActivity.
const (
	ExternalDriverStateActivityAVAILABILITY ExternalDriverStateActivity = "AVAILABILITY"
	ExternalDriverStateActivityDRIVING      ExternalDriverStateActivity = "DRIVING"
	ExternalDriverStateActivityREST         ExternalDriverStateActivity = "REST"
	ExternalDriverStateActivityUNKNOWN      ExternalDriverStateActivity = "UNKNOWN"
	ExternalDriverStateActivityWORK         ExternalDriverStateActivity = "WORK"
)

// Defines values for ExternalDriverViolationParamsSeverities.
const (
	ExternalDriverViolationParamsSeveritiesMINOR         ExternalDriverViolationParamsSeverities = "MINOR"
	ExternalDriverViolationParamsSeveritiesMOSTSERIOUS   ExternalDriverViolationParamsSeverities = "MOST_SERIOUS"
	ExternalDriverViolationParamsSeveritiesNOTAPPLICABLE ExternalDriverViolationParamsSeverities = "NOT_APPLICABLE"
	ExternalDriverViolationParamsSeveritiesSERIOUS       ExternalDriverViolationParamsSeverities = "SERIOUS"
	ExternalDriverViolationParamsSeveritiesUNKNOWN       ExternalDriverViolationParamsSeverities = "UNKNOWN"
	ExternalDriverViolationParamsSeveritiesVERYSERIOUS   ExternalDriverViolationParamsSeverities = "VERY_SERIOUS"
)

// Defines values for ExternalDriverViolationParamsTypes.
const (
	ExternalDriverViolationParamsTypesEXTENDEDDAILYDRIVINGLIMITEXCEEDED  ExternalDriverViolationParamsTypes = "EXTENDED_DAILY_DRIVING_LIMIT_EXCEEDED"
	ExternalDriverViolationParamsTypesFORTNIGHTLYDRIVINGLIMITEXCEEDED    ExternalDriverViolationParamsTypes = "FORTNIGHTLY_DRIVING_LIMIT_EXCEEDED"
	ExternalDriverViolationParamsTypesINSUFFICIENTCREWDAILYREST          ExternalDriverViolationParamsTypes = "INSUFFICIENT_CREW_DAILY_REST"
	ExternalDriverViolationParamsTypesINSUFFICIENTREDUCEDDAILYREST       ExternalDriverViolationParamsTypes = "INSUFFICIENT_REDUCED_DAILY_REST"
	ExternalDriverViolationParamsTypesINSUFFICIENTREDUCEDWEEKLYREST      ExternalDriverViolationParamsTypes = "INSUFFICIENT_REDUCED_WEEKLY_REST"
	ExternalDriverViolationParamsTypesINSUFFICIENTREGULARDAILYREST       ExternalDriverViolationParamsTypes = "INSUFFICIENT_REGULAR_DAILY_REST"
	ExternalDriverViolationParamsTypesINSUFFICIENTREGULARWEEKLYREST      ExternalDriverViolationParamsTypes = "INSUFFICIENT_REGULAR_WEEKLY_REST"
	ExternalDriverViolationParamsTypesNIGHTSHIFTWORKLIMITEXCEEDED        ExternalDriverViolationParamsTypes = "NIGHT_SHIFT_WORK_LIMIT_EXCEEDED"
	ExternalDriverViolationParamsTypesNOBREAKAFTERSIXHOURWORK            ExternalDriverViolationParamsTypes = "NO_BREAK_AFTER_SIX_HOUR_WORK"
	ExternalDriverViolationParamsTypesNOCOMPENSATIONFORREDUCEDWEEKLYREST ExternalDriverViolationParamsTypes = "NO_COMPENSATION_FOR_REDUCED_WEEKLY_REST"
	ExternalDriverViolationParamsTypesNOCOUNTRYSETONWORKEND              ExternalDriverViolationParamsTypes = "NO_COUNTRY_SET_ON_WORK_END"
	ExternalDriverViolationParamsTypesNOCOUNTRYSETONWORKSTART            ExternalDriverViolationParamsTypes = "NO_COUNTRY_SET_ON_WORK_START"
	ExternalDriverViolationParamsTypesNOREDUCEDBREAKAFTERSIXHOURWORK     ExternalDriverViolationParamsTypes = "NO_REDUCED_BREAK_AFTER_SIX_HOUR_WORK"
	ExternalDriverViolationParamsTypesREGULARDAILYDRIVINGLIMITEXCEEDED   ExternalDriverViolationParamsTypes = "REGULAR_DAILY_DRIVING_LIMIT_EXCEEDED"
	ExternalDriverViolationParamsTypesUNINTERRUPTEDDRIVINGLIMITEXCEEDED  ExternalDriverViolationParamsTypes = "UNINTERRUPTED_DRIVING_LIMIT_EXCEEDED"
	ExternalDriverViolationParamsTypesUNKNOWN                            ExternalDriverViolationParamsTypes = "UNKNOWN"
	ExternalDriverViolationParamsTypesUNKNOWNACTIVITY                    ExternalDriverViolationParamsTypes = "UNKNOWN_ACTIVITY"
	ExternalDriverViolationParamsTypesWEEKLYDRIVINGLIMITEXCEEDED         ExternalDriverViolationParamsTypes = "WEEKLY_DRIVING_LIMIT_EXCEEDED"
	ExternalDriverViolationParamsTypesWEEKLYRESTNOTSTARTED               ExternalDriverViolationParamsTypes = "WEEKLY_REST_NOT_STARTED"
	ExternalDriverViolationParamsTypesWEEKLYWORKAVERAGELIMITEXCEEDED     ExternalDriverViolationParamsTypes = "WEEKLY_WORK_AVERAGE_LIMIT_EXCEEDED"
	ExternalDriverViolationParamsTypesWEEKLYWORKLIMITEXCEEDED            ExternalDriverViolationParamsTypes = "WEEKLY_WORK_LIMIT_EXCEEDED"
)

// Defines values for ExternalFactualPropertyType.
const (
	ExternalFactualPropertyTypeDURATION ExternalFactualPropertyType = "DURATION"
	ExternalFactualPropertyTypeUNKNOWN  ExternalFactualPropertyType = "UNKNOWN"
)

// Defines values for ExternalFuelEventEventType.
const (
	ExternalFuelEventEventTypeDRAIN  ExternalFuelEventEventType = "DRAIN"
	ExternalFuelEventEventTypeREFUEL ExternalFuelEventEventType = "REFUEL"
)

// Defines values for ExternalGeozoneType.
const (
	ExternalGeozoneTypePOINT   ExternalGeozoneType = "POINT"
	ExternalGeozoneTypePOLYGON ExternalGeozoneType = "POLYGON"
	ExternalGeozoneTypeUNKNOWN ExternalGeozoneType = "UNKNOWN"
)

// Defines values for ExternalGeozoneVisitDataItemDirection.
const (
	ExternalGeozoneVisitDataItemDirectionIN  ExternalGeozoneVisitDataItemDirection = "IN"
	ExternalGeozoneVisitDataItemDirectionOUT ExternalGeozoneVisitDataItemDirection = "OUT"
)

// Defines values for ExternalIdentifierType.
const (
	ExternalIdentifierTypeDLT        ExternalIdentifierType = "DLT"
	ExternalIdentifierTypeIBUTTON    ExternalIdentifierType = "IBUTTON"
	ExternalIdentifierTypeTACHOGRAPH ExternalIdentifierType = "TACHOGRAPH"
	ExternalIdentifierTypeWIRELESS   ExternalIdentifierType = "WIRELESS"
)

// Defines values for ExternalVehicleParamsFuelType.
const (
	ExternalVehicleParamsFuelTypeExternalFuelTypeDIESEL      ExternalVehicleParamsFuelType = "ExternalFuelType.DIESEL"
	ExternalVehicleParamsFuelTypeExternalFuelTypeELECTRICITY ExternalVehicleParamsFuelType = "ExternalFuelType.ELECTRICITY"
	ExternalVehicleParamsFuelTypeExternalFuelTypeLPG         ExternalVehicleParamsFuelType = "ExternalFuelType.LPG"
	ExternalVehicleParamsFuelTypeExternalFuelTypeOTHER       ExternalVehicleParamsFuelType = "ExternalFuelType.OTHER"
	ExternalVehicleParamsFuelTypeExternalFuelTypePETROL      ExternalVehicleParamsFuelType = "ExternalFuelType.PETROL"
	ExternalVehicleParamsFuelTypeExternalFuelTypeUNKNOWN     ExternalVehicleParamsFuelType = "ExternalFuelType.UNKNOWN"
)

// Defines values for ExternalViolationSeverity.
const (
	ExternalViolationSeverityMINOR         ExternalViolationSeverity = "MINOR"
	ExternalViolationSeverityMOSTSERIOUS   ExternalViolationSeverity = "MOST_SERIOUS"
	ExternalViolationSeverityNOTAPPLICABLE ExternalViolationSeverity = "NOT_APPLICABLE"
	ExternalViolationSeveritySERIOUS       ExternalViolationSeverity = "SERIOUS"
	ExternalViolationSeverityUNKNOWN       ExternalViolationSeverity = "UNKNOWN"
	ExternalViolationSeverityVERYSERIOUS   ExternalViolationSeverity = "VERY_SERIOUS"
)

// Defines values for ExternalViolationType.
const (
	ExternalViolationTypeEXTENDEDDAILYDRIVINGLIMITEXCEEDED  ExternalViolationType = "EXTENDED_DAILY_DRIVING_LIMIT_EXCEEDED"
	ExternalViolationTypeFORTNIGHTLYDRIVINGLIMITEXCEEDED    ExternalViolationType = "FORTNIGHTLY_DRIVING_LIMIT_EXCEEDED"
	ExternalViolationTypeINSUFFICIENTCREWDAILYREST          ExternalViolationType = "INSUFFICIENT_CREW_DAILY_REST"
	ExternalViolationTypeINSUFFICIENTREDUCEDDAILYREST       ExternalViolationType = "INSUFFICIENT_REDUCED_DAILY_REST"
	ExternalViolationTypeINSUFFICIENTREDUCEDWEEKLYREST      ExternalViolationType = "INSUFFICIENT_REDUCED_WEEKLY_REST"
	ExternalViolationTypeINSUFFICIENTREGULARDAILYREST       ExternalViolationType = "INSUFFICIENT_REGULAR_DAILY_REST"
	ExternalViolationTypeINSUFFICIENTREGULARWEEKLYREST      ExternalViolationType = "INSUFFICIENT_REGULAR_WEEKLY_REST"
	ExternalViolationTypeNIGHTSHIFTWORKLIMITEXCEEDED        ExternalViolationType = "NIGHT_SHIFT_WORK_LIMIT_EXCEEDED"
	ExternalViolationTypeNOBREAKAFTERSIXHOURWORK            ExternalViolationType = "NO_BREAK_AFTER_SIX_HOUR_WORK"
	ExternalViolationTypeNOCOMPENSATIONFORREDUCEDWEEKLYREST ExternalViolationType = "NO_COMPENSATION_FOR_REDUCED_WEEKLY_REST"
	ExternalViolationTypeNOCOUNTRYSETONWORKEND              ExternalViolationType = "NO_COUNTRY_SET_ON_WORK_END"
	ExternalViolationTypeNOCOUNTRYSETONWORKSTART            ExternalViolationType = "NO_COUNTRY_SET_ON_WORK_START"
	ExternalViolationTypeNOREDUCEDBREAKAFTERSIXHOURWORK     ExternalViolationType = "NO_REDUCED_BREAK_AFTER_SIX_HOUR_WORK"
	ExternalViolationTypeREGULARDAILYDRIVINGLIMITEXCEEDED   ExternalViolationType = "REGULAR_DAILY_DRIVING_LIMIT_EXCEEDED"
	ExternalViolationTypeUNINTERRUPTEDDRIVINGLIMITEXCEEDED  ExternalViolationType = "UNINTERRUPTED_DRIVING_LIMIT_EXCEEDED"
	ExternalViolationTypeUNKNOWN                            ExternalViolationType = "UNKNOWN"
	ExternalViolationTypeUNKNOWNACTIVITY                    ExternalViolationType = "UNKNOWN_ACTIVITY"
	ExternalViolationTypeWEEKLYDRIVINGLIMITEXCEEDED         ExternalViolationType = "WEEKLY_DRIVING_LIMIT_EXCEEDED"
	ExternalViolationTypeWEEKLYRESTNOTSTARTED               ExternalViolationType = "WEEKLY_REST_NOT_STARTED"
	ExternalViolationTypeWEEKLYWORKAVERAGELIMITEXCEEDED     ExternalViolationType = "WEEKLY_WORK_AVERAGE_LIMIT_EXCEEDED"
	ExternalViolationTypeWEEKLYWORKLIMITEXCEEDED            ExternalViolationType = "WEEKLY_WORK_LIMIT_EXCEEDED"
)

// Defines values for RequestDriverAssignationEventType.
const (
	RequestDriverAssignationEventTypeSTART   RequestDriverAssignationEventType = "START"
	RequestDriverAssignationEventTypeSTOP    RequestDriverAssignationEventType = "STOP"
	RequestDriverAssignationEventTypeUNKNOWN RequestDriverAssignationEventType = "UNKNOWN"
)

// Defines values for ResponseDriverAssignationEventEventType.
const (
	ResponseDriverAssignationEventEventTypeSTART   ResponseDriverAssignationEventEventType = "START"
	ResponseDriverAssignationEventEventTypeSTOP    ResponseDriverAssignationEventEventType = "STOP"
	ResponseDriverAssignationEventEventTypeUNKNOWN ResponseDriverAssignationEventEventType = "UNKNOWN"
)

// Defines values for ResponseEntityStatusCode.
const (
	ResponseEntityStatusCodeN100CONTINUE                      ResponseEntityStatusCode = "100 CONTINUE"
	ResponseEntityStatusCodeN101SWITCHINGPROTOCOLS            ResponseEntityStatusCode = "101 SWITCHING_PROTOCOLS"
	ResponseEntityStatusCodeN102PROCESSING                    ResponseEntityStatusCode = "102 PROCESSING"
	ResponseEntityStatusCodeN103CHECKPOINT                    ResponseEntityStatusCode = "103 CHECKPOINT"
	ResponseEntityStatusCodeN200OK                            ResponseEntityStatusCode = "200 OK"
	ResponseEntityStatusCodeN201CREATED                       ResponseEntityStatusCode = "201 CREATED"
	ResponseEntityStatusCodeN202ACCEPTED                      ResponseEntityStatusCode = "202 ACCEPTED"
	ResponseEntityStatusCodeN203NONAUTHORITATIVEINFORMATION   ResponseEntityStatusCode = "203 NON_AUTHORITATIVE_INFORMATION"
	ResponseEntityStatusCodeN204NOCONTENT                     ResponseEntityStatusCode = "204 NO_CONTENT"
	ResponseEntityStatusCodeN205RESETCONTENT                  ResponseEntityStatusCode = "205 RESET_CONTENT"
	ResponseEntityStatusCodeN206PARTIALCONTENT                ResponseEntityStatusCode = "206 PARTIAL_CONTENT"
	ResponseEntityStatusCodeN207MULTISTATUS                   ResponseEntityStatusCode = "207 MULTI_STATUS"
	ResponseEntityStatusCodeN208ALREADYREPORTED               ResponseEntityStatusCode = "208 ALREADY_REPORTED"
	ResponseEntityStatusCodeN226IMUSED                        ResponseEntityStatusCode = "226 IM_USED"
	ResponseEntityStatusCodeN300MULTIPLECHOICES               ResponseEntityStatusCode = "300 MULTIPLE_CHOICES"
	ResponseEntityStatusCodeN301MOVEDPERMANENTLY              ResponseEntityStatusCode = "301 MOVED_PERMANENTLY"
	ResponseEntityStatusCodeN302FOUND                         ResponseEntityStatusCode = "302 FOUND"
	ResponseEntityStatusCodeN302MOVEDTEMPORARILY              ResponseEntityStatusCode = "302 MOVED_TEMPORARILY"
	ResponseEntityStatusCodeN303SEEOTHER                      ResponseEntityStatusCode = "303 SEE_OTHER"
	ResponseEntityStatusCodeN304NOTMODIFIED                   ResponseEntityStatusCode = "304 NOT_MODIFIED"
	ResponseEntityStatusCodeN305USEPROXY                      ResponseEntityStatusCode = "305 USE_PROXY"
	ResponseEntityStatusCodeN307TEMPORARYREDIRECT             ResponseEntityStatusCode = "307 TEMPORARY_REDIRECT"
	ResponseEntityStatusCodeN308PERMANENTREDIRECT             ResponseEntityStatusCode = "308 PERMANENT_REDIRECT"
	ResponseEntityStatusCodeN400BADREQUEST                    ResponseEntityStatusCode = "400 BAD_REQUEST"
	ResponseEntityStatusCodeN401UNAUTHORIZED                  ResponseEntityStatusCode = "401 UNAUTHORIZED"
	ResponseEntityStatusCodeN402PAYMENTREQUIRED               ResponseEntityStatusCode = "402 PAYMENT_REQUIRED"
	ResponseEntityStatusCodeN403FORBIDDEN                     ResponseEntityStatusCode = "403 FORBIDDEN"
	ResponseEntityStatusCodeN404NOTFOUND                      ResponseEntityStatusCode = "404 NOT_FOUND"
	ResponseEntityStatusCodeN405METHODNOTALLOWED              ResponseEntityStatusCode = "405 METHOD_NOT_ALLOWED"
	ResponseEntityStatusCodeN406NOTACCEPTABLE                 ResponseEntityStatusCode = "406 NOT_ACCEPTABLE"
	ResponseEntityStatusCodeN407PROXYAUTHENTICATIONREQUIRED   ResponseEntityStatusCode = "407 PROXY_AUTHENTICATION_REQUIRED"
	ResponseEntityStatusCodeN408REQUESTTIMEOUT                ResponseEntityStatusCode = "408 REQUEST_TIMEOUT"
	ResponseEntityStatusCodeN409CONFLICT                      ResponseEntityStatusCode = "409 CONFLICT"
	ResponseEntityStatusCodeN410GONE                          ResponseEntityStatusCode = "410 GONE"
	ResponseEntityStatusCodeN411LENGTHREQUIRED                ResponseEntityStatusCode = "411 LENGTH_REQUIRED"
	ResponseEntityStatusCodeN412PRECONDITIONFAILED            ResponseEntityStatusCode = "412 PRECONDITION_FAILED"
	ResponseEntityStatusCodeN413PAYLOADTOOLARGE               ResponseEntityStatusCode = "413 PAYLOAD_TOO_LARGE"
	ResponseEntityStatusCodeN413REQUESTENTITYTOOLARGE         ResponseEntityStatusCode = "413 REQUEST_ENTITY_TOO_LARGE"
	ResponseEntityStatusCodeN414REQUESTURITOOLONG             ResponseEntityStatusCode = "414 REQUEST_URI_TOO_LONG"
	ResponseEntityStatusCodeN414URITOOLONG                    ResponseEntityStatusCode = "414 URI_TOO_LONG"
	ResponseEntityStatusCodeN415UNSUPPORTEDMEDIATYPE          ResponseEntityStatusCode = "415 UNSUPPORTED_MEDIA_TYPE"
	ResponseEntityStatusCodeN416REQUESTEDRANGENOTSATISFIABLE  ResponseEntityStatusCode = "416 REQUESTED_RANGE_NOT_SATISFIABLE"
	ResponseEntityStatusCodeN417EXPECTATIONFAILED             ResponseEntityStatusCode = "417 EXPECTATION_FAILED"
	ResponseEntityStatusCodeN418IAMATEAPOT                    ResponseEntityStatusCode = "418 I_AM_A_TEAPOT"
	ResponseEntityStatusCodeN419INSUFFICIENTSPACEONRESOURCE   ResponseEntityStatusCode = "419 INSUFFICIENT_SPACE_ON_RESOURCE"
	ResponseEntityStatusCodeN420METHODFAILURE                 ResponseEntityStatusCode = "420 METHOD_FAILURE"
	ResponseEntityStatusCodeN421DESTINATIONLOCKED             ResponseEntityStatusCode = "421 DESTINATION_LOCKED"
	ResponseEntityStatusCodeN422UNPROCESSABLEENTITY           ResponseEntityStatusCode = "422 UNPROCESSABLE_ENTITY"
	ResponseEntityStatusCodeN423LOCKED                        ResponseEntityStatusCode = "423 LOCKED"
	ResponseEntityStatusCodeN424FAILEDDEPENDENCY              ResponseEntityStatusCode = "424 FAILED_DEPENDENCY"
	ResponseEntityStatusCodeN425TOOEARLY                      ResponseEntityStatusCode = "425 TOO_EARLY"
	ResponseEntityStatusCodeN426UPGRADEREQUIRED               ResponseEntityStatusCode = "426 UPGRADE_REQUIRED"
	ResponseEntityStatusCodeN428PRECONDITIONREQUIRED          ResponseEntityStatusCode = "428 PRECONDITION_REQUIRED"
	ResponseEntityStatusCodeN429TOOMANYREQUESTS               ResponseEntityStatusCode = "429 TOO_MANY_REQUESTS"
	ResponseEntityStatusCodeN431REQUESTHEADERFIELDSTOOLARGE   ResponseEntityStatusCode = "431 REQUEST_HEADER_FIELDS_TOO_LARGE"
	ResponseEntityStatusCodeN451UNAVAILABLEFORLEGALREASONS    ResponseEntityStatusCode = "451 UNAVAILABLE_FOR_LEGAL_REASONS"
	ResponseEntityStatusCodeN500INTERNALSERVERERROR           ResponseEntityStatusCode = "500 INTERNAL_SERVER_ERROR"
	ResponseEntityStatusCodeN501NOTIMPLEMENTED                ResponseEntityStatusCode = "501 NOT_IMPLEMENTED"
	ResponseEntityStatusCodeN502BADGATEWAY                    ResponseEntityStatusCode = "502 BAD_GATEWAY"
	ResponseEntityStatusCodeN503SERVICEUNAVAILABLE            ResponseEntityStatusCode = "503 SERVICE_UNAVAILABLE"
	ResponseEntityStatusCodeN504GATEWAYTIMEOUT                ResponseEntityStatusCode = "504 GATEWAY_TIMEOUT"
	ResponseEntityStatusCodeN505HTTPVERSIONNOTSUPPORTED       ResponseEntityStatusCode = "505 HTTP_VERSION_NOT_SUPPORTED"
	ResponseEntityStatusCodeN506VARIANTALSONEGOTIATES         ResponseEntityStatusCode = "506 VARIANT_ALSO_NEGOTIATES"
	ResponseEntityStatusCodeN507INSUFFICIENTSTORAGE           ResponseEntityStatusCode = "507 INSUFFICIENT_STORAGE"
	ResponseEntityStatusCodeN508LOOPDETECTED                  ResponseEntityStatusCode = "508 LOOP_DETECTED"
	ResponseEntityStatusCodeN509BANDWIDTHLIMITEXCEEDED        ResponseEntityStatusCode = "509 BANDWIDTH_LIMIT_EXCEEDED"
	ResponseEntityStatusCodeN510NOTEXTENDED                   ResponseEntityStatusCode = "510 NOT_EXTENDED"
	ResponseEntityStatusCodeN511NETWORKAUTHENTICATIONREQUIRED ResponseEntityStatusCode = "511 NETWORK_AUTHENTICATION_REQUIRED"
)

// Defines values for SortDescriptorDirection.
const (
	SortDescriptorDirectionASC  SortDescriptorDirection = "ASC"
	SortDescriptorDirectionDESC SortDescriptorDirection = "DESC"
)

// Defines values for SortDescriptorIdentifier.
const (
	SortDescriptorIdentifierCARDNUMBER          SortDescriptorIdentifier = "CARD_NUMBER"
	SortDescriptorIdentifierCREATEDAT           SortDescriptorIdentifier = "CREATED_AT"
	SortDescriptorIdentifierDRIVERNAMEFIRSTLAST SortDescriptorIdentifier = "DRIVER_NAME_FIRST_LAST"
	SortDescriptorIdentifierDRIVERNAMELASTFIRST SortDescriptorIdentifier = "DRIVER_NAME_LAST_FIRST"
	SortDescriptorIdentifierOBJECTNAME          SortDescriptorIdentifier = "OBJECT_NAME"
	SortDescriptorIdentifierSTATUS              SortDescriptorIdentifier = "STATUS"
	SortDescriptorIdentifierTYPE                SortDescriptorIdentifier = "TYPE"
	SortDescriptorIdentifierUPDATEDAT           SortDescriptorIdentifier = "UPDATED_AT"
)

// Defines values for StateActivity.
const (
	StateActivityAVAILABLE   StateActivity = "AVAILABLE"
	StateActivityDRIVING     StateActivity = "DRIVING"
	StateActivityERROR       StateActivity = "ERROR"
	StateActivityRESTING     StateActivity = "RESTING"
	StateActivityUNAVAILABLE StateActivity = "UNAVAILABLE"
	StateActivityUNKNOWN     StateActivity = "UNKNOWN"
	StateActivityWORKING     StateActivity = "WORKING"
)

// Defines values for TachoFilterRequestErrors.
const (
	TachoFilterRequestErrorsAUTHORIZATIONFAILURE       TachoFilterRequestErrors = "AUTHORIZATION_FAILURE"
	TachoFilterRequestErrorsDEVICECOMMUNICATIONFAILURE TachoFilterRequestErrors = "DEVICE_COMMUNICATION_FAILURE"
	TachoFilterRequestErrorsDEVICEISBUSY               TachoFilterRequestErrors = "DEVICE_IS_BUSY"
	TachoFilterRequestErrorsDSRCABORTED                TachoFilterRequestErrors = "DSRC_ABORTED"
	TachoFilterRequestErrorsEXPIRED                    TachoFilterRequestErrors = "EXPIRED"
	TachoFilterRequestErrorsNOCARDINSLOT               TachoFilterRequestErrors = "NO_CARD_IN_SLOT"
	TachoFilterRequestErrorsNONE                       TachoFilterRequestErrors = "NONE"
	TachoFilterRequestErrorsSERVERFAILURE              TachoFilterRequestErrors = "SERVER_FAILURE"
	TachoFilterRequestErrorsUNSPECIFIED                TachoFilterRequestErrors = "UNSPECIFIED"
	TachoFilterRequestErrorsVALIDATIONFAILURE          TachoFilterRequestErrors = "VALIDATION_FAILURE"
)

// Defines values for TachoFilterRequestFtpUploadStatuses.
const (
	TachoFilterRequestFtpUploadStatusesACCOUNTNOTVALIDDMMERROR  TachoFilterRequestFtpUploadStatuses = "ACCOUNT_NOT_VALID_DMM_ERROR"
	TachoFilterRequestFtpUploadStatusesERROR                    TachoFilterRequestFtpUploadStatuses = "ERROR"
	TachoFilterRequestFtpUploadStatusesFILEALREADYEXISTSERROR   TachoFilterRequestFtpUploadStatuses = "FILE_ALREADY_EXISTS_ERROR"
	TachoFilterRequestFtpUploadStatusesINPROGRESS               TachoFilterRequestFtpUploadStatuses = "IN_PROGRESS"
	TachoFilterRequestFtpUploadStatusesINVALIDACCOUNTERROR      TachoFilterRequestFtpUploadStatuses = "INVALID_ACCOUNT_ERROR"
	TachoFilterRequestFtpUploadStatusesNOTAUTHORIZEDFORROADSOFT TachoFilterRequestFtpUploadStatuses = "NOT_AUTHORIZED_FOR_ROAD_SOFT"
	TachoFilterRequestFtpUploadStatusesNOTAUTHORIZEDFORVDO      TachoFilterRequestFtpUploadStatuses = "NOT_AUTHORIZED_FOR_VDO"
	TachoFilterRequestFtpUploadStatusesUNKNOWN                  TachoFilterRequestFtpUploadStatuses = "UNKNOWN"
	TachoFilterRequestFtpUploadStatusesUPLOADED                 TachoFilterRequestFtpUploadStatuses = "UPLOADED"
)

// Defines values for TachoFilterRequestRoadsoftUploadStatuses.
const (
	TachoFilterRequestRoadsoftUploadStatusesACCOUNTNOTVALIDDMMERROR  TachoFilterRequestRoadsoftUploadStatuses = "ACCOUNT_NOT_VALID_DMM_ERROR"
	TachoFilterRequestRoadsoftUploadStatusesERROR                    TachoFilterRequestRoadsoftUploadStatuses = "ERROR"
	TachoFilterRequestRoadsoftUploadStatusesFILEALREADYEXISTSERROR   TachoFilterRequestRoadsoftUploadStatuses = "FILE_ALREADY_EXISTS_ERROR"
	TachoFilterRequestRoadsoftUploadStatusesINPROGRESS               TachoFilterRequestRoadsoftUploadStatuses = "IN_PROGRESS"
	TachoFilterRequestRoadsoftUploadStatusesINVALIDACCOUNTERROR      TachoFilterRequestRoadsoftUploadStatuses = "INVALID_ACCOUNT_ERROR"
	TachoFilterRequestRoadsoftUploadStatusesNOTAUTHORIZEDFORROADSOFT TachoFilterRequestRoadsoftUploadStatuses = "NOT_AUTHORIZED_FOR_ROAD_SOFT"
	TachoFilterRequestRoadsoftUploadStatusesNOTAUTHORIZEDFORVDO      TachoFilterRequestRoadsoftUploadStatuses = "NOT_AUTHORIZED_FOR_VDO"
	TachoFilterRequestRoadsoftUploadStatusesUNKNOWN                  TachoFilterRequestRoadsoftUploadStatuses = "UNKNOWN"
	TachoFilterRequestRoadsoftUploadStatusesUPLOADED                 TachoFilterRequestRoadsoftUploadStatuses = "UPLOADED"
)

// Defines values for TachoFilterRequestStatuses.
const (
	TachoFilterRequestStatusesAUTHENTICATING          TachoFilterRequestStatuses = "AUTHENTICATING"
	TachoFilterRequestStatusesAUTHENTICATIONCOMPLETED TachoFilterRequestStatuses = "AUTHENTICATION_COMPLETED"
	TachoFilterRequestStatusesDOWNLOADING             TachoFilterRequestStatuses = "DOWNLOADING"
	TachoFilterRequestStatusesFAILED                  TachoFilterRequestStatuses = "FAILED"
	TachoFilterRequestStatusesPENDING                 TachoFilterRequestStatuses = "PENDING"
	TachoFilterRequestStatusesPENDINGVALIDATION       TachoFilterRequestStatuses = "PENDING_VALIDATION"
	TachoFilterRequestStatusesSUCCEEDED               TachoFilterRequestStatuses = "SUCCEEDED"
	TachoFilterRequestStatusesSUCCEEDEDDIRTY          TachoFilterRequestStatuses = "SUCCEEDED_DIRTY"
	TachoFilterRequestStatusesUNKNOWN                 TachoFilterRequestStatuses = "UNKNOWN"
)

// Defines values for TachoFilterRequestTiswebUploadStatuses.
const (
	TachoFilterRequestTiswebUploadStatusesACCOUNTNOTVALIDDMMERROR  TachoFilterRequestTiswebUploadStatuses = "ACCOUNT_NOT_VALID_DMM_ERROR"
	TachoFilterRequestTiswebUploadStatusesERROR                    TachoFilterRequestTiswebUploadStatuses = "ERROR"
	TachoFilterRequestTiswebUploadStatusesFILEALREADYEXISTSERROR   TachoFilterRequestTiswebUploadStatuses = "FILE_ALREADY_EXISTS_ERROR"
	TachoFilterRequestTiswebUploadStatusesINPROGRESS               TachoFilterRequestTiswebUploadStatuses = "IN_PROGRESS"
	TachoFilterRequestTiswebUploadStatusesINVALIDACCOUNTERROR      TachoFilterRequestTiswebUploadStatuses = "INVALID_ACCOUNT_ERROR"
	TachoFilterRequestTiswebUploadStatusesNOTAUTHORIZEDFORROADSOFT TachoFilterRequestTiswebUploadStatuses = "NOT_AUTHORIZED_FOR_ROAD_SOFT"
	TachoFilterRequestTiswebUploadStatusesNOTAUTHORIZEDFORVDO      TachoFilterRequestTiswebUploadStatuses = "NOT_AUTHORIZED_FOR_VDO"
	TachoFilterRequestTiswebUploadStatusesUNKNOWN                  TachoFilterRequestTiswebUploadStatuses = "UNKNOWN"
	TachoFilterRequestTiswebUploadStatusesUPLOADED                 TachoFilterRequestTiswebUploadStatuses = "UPLOADED"
)

// Defines values for TachoFilterRequestTypes.
const (
	TachoFilterRequestTypesDRIVERCARD TachoFilterRequestTypes = "DRIVER_CARD"
	TachoFilterRequestTypesTACHODATA  TachoFilterRequestTypes = "TACHO_DATA"
)

// Defines values for TachoRequestDetailResponseError.
const (
	TachoRequestDetailResponseErrorAUTHORIZATIONFAILURE       TachoRequestDetailResponseError = "AUTHORIZATION_FAILURE"
	TachoRequestDetailResponseErrorDEVICECOMMUNICATIONFAILURE TachoRequestDetailResponseError = "DEVICE_COMMUNICATION_FAILURE"
	TachoRequestDetailResponseErrorDEVICEISBUSY               TachoRequestDetailResponseError = "DEVICE_IS_BUSY"
	TachoRequestDetailResponseErrorDSRCABORTED                TachoRequestDetailResponseError = "DSRC_ABORTED"
	TachoRequestDetailResponseErrorEXPIRED                    TachoRequestDetailResponseError = "EXPIRED"
	TachoRequestDetailResponseErrorNOCARDINSLOT               TachoRequestDetailResponseError = "NO_CARD_IN_SLOT"
	TachoRequestDetailResponseErrorNONE                       TachoRequestDetailResponseError = "NONE"
	TachoRequestDetailResponseErrorSERVERFAILURE              TachoRequestDetailResponseError = "SERVER_FAILURE"
	TachoRequestDetailResponseErrorUNSPECIFIED                TachoRequestDetailResponseError = "UNSPECIFIED"
	TachoRequestDetailResponseErrorVALIDATIONFAILURE          TachoRequestDetailResponseError = "VALIDATION_FAILURE"
)

// Defines values for TachoRequestDetailResponseStatus.
const (
	TachoRequestDetailResponseStatusAUTHENTICATING          TachoRequestDetailResponseStatus = "AUTHENTICATING"
	TachoRequestDetailResponseStatusAUTHENTICATIONCOMPLETED TachoRequestDetailResponseStatus = "AUTHENTICATION_COMPLETED"
	TachoRequestDetailResponseStatusDOWNLOADING             TachoRequestDetailResponseStatus = "DOWNLOADING"
	TachoRequestDetailResponseStatusFAILED                  TachoRequestDetailResponseStatus = "FAILED"
	TachoRequestDetailResponseStatusPENDING                 TachoRequestDetailResponseStatus = "PENDING"
	TachoRequestDetailResponseStatusPENDINGVALIDATION       TachoRequestDetailResponseStatus = "PENDING_VALIDATION"
	TachoRequestDetailResponseStatusSUCCEEDED               TachoRequestDetailResponseStatus = "SUCCEEDED"
	TachoRequestDetailResponseStatusSUCCEEDEDDIRTY          TachoRequestDetailResponseStatus = "SUCCEEDED_DIRTY"
	TachoRequestDetailResponseStatusUNKNOWN                 TachoRequestDetailResponseStatus = "UNKNOWN"
)

// Defines values for TachoRequestDetailResponseType.
const (
	TachoRequestDetailResponseTypeDRIVERCARD TachoRequestDetailResponseType = "DRIVER_CARD"
	TachoRequestDetailResponseTypeTACHODATA  TachoRequestDetailResponseType = "TACHO_DATA"
)

// Defines values for TachoRequestResponseError.
const (
	TachoRequestResponseErrorAUTHORIZATIONFAILURE       TachoRequestResponseError = "AUTHORIZATION_FAILURE"
	TachoRequestResponseErrorDEVICECOMMUNICATIONFAILURE TachoRequestResponseError = "DEVICE_COMMUNICATION_FAILURE"
	TachoRequestResponseErrorDEVICEISBUSY               TachoRequestResponseError = "DEVICE_IS_BUSY"
	TachoRequestResponseErrorDSRCABORTED                TachoRequestResponseError = "DSRC_ABORTED"
	TachoRequestResponseErrorEXPIRED                    TachoRequestResponseError = "EXPIRED"
	TachoRequestResponseErrorNOCARDINSLOT               TachoRequestResponseError = "NO_CARD_IN_SLOT"
	TachoRequestResponseErrorNONE                       TachoRequestResponseError = "NONE"
	TachoRequestResponseErrorSERVERFAILURE              TachoRequestResponseError = "SERVER_FAILURE"
	TachoRequestResponseErrorUNSPECIFIED                TachoRequestResponseError = "UNSPECIFIED"
	TachoRequestResponseErrorVALIDATIONFAILURE          TachoRequestResponseError = "VALIDATION_FAILURE"
)

// Defines values for TachoRequestResponseOrigin.
const (
	TachoRequestResponseOriginAPI          TachoRequestResponseOrigin = "API"
	TachoRequestResponseOriginMANUALIMPORT TachoRequestResponseOrigin = "MANUAL_IMPORT"
	TachoRequestResponseOriginONDEMAND     TachoRequestResponseOrigin = "ON_DEMAND"
	TachoRequestResponseOriginSCHEDULER    TachoRequestResponseOrigin = "SCHEDULER"
)

// Defines values for TachoRequestResponseStatus.
const (
	TachoRequestResponseStatusAUTHENTICATING          TachoRequestResponseStatus = "AUTHENTICATING"
	TachoRequestResponseStatusAUTHENTICATIONCOMPLETED TachoRequestResponseStatus = "AUTHENTICATION_COMPLETED"
	TachoRequestResponseStatusDOWNLOADING             TachoRequestResponseStatus = "DOWNLOADING"
	TachoRequestResponseStatusFAILED                  TachoRequestResponseStatus = "FAILED"
	TachoRequestResponseStatusPENDING                 TachoRequestResponseStatus = "PENDING"
	TachoRequestResponseStatusPENDINGVALIDATION       TachoRequestResponseStatus = "PENDING_VALIDATION"
	TachoRequestResponseStatusSUCCEEDED               TachoRequestResponseStatus = "SUCCEEDED"
	TachoRequestResponseStatusSUCCEEDEDDIRTY          TachoRequestResponseStatus = "SUCCEEDED_DIRTY"
	TachoRequestResponseStatusUNKNOWN                 TachoRequestResponseStatus = "UNKNOWN"
)

// Defines values for TachoRequestResponseType.
const (
	TachoRequestResponseTypeDRIVERCARD TachoRequestResponseType = "DRIVER_CARD"
	TachoRequestResponseTypeTACHODATA  TachoRequestResponseType = "TACHO_DATA"
)

// Defines values for TachoRequestResponseUploadFtpStatus.
const (
	TachoRequestResponseUploadFtpStatusACCOUNTNOTVALIDDMMERROR  TachoRequestResponseUploadFtpStatus = "ACCOUNT_NOT_VALID_DMM_ERROR"
	TachoRequestResponseUploadFtpStatusERROR                    TachoRequestResponseUploadFtpStatus = "ERROR"
	TachoRequestResponseUploadFtpStatusFILEALREADYEXISTSERROR   TachoRequestResponseUploadFtpStatus = "FILE_ALREADY_EXISTS_ERROR"
	TachoRequestResponseUploadFtpStatusINPROGRESS               TachoRequestResponseUploadFtpStatus = "IN_PROGRESS"
	TachoRequestResponseUploadFtpStatusINVALIDACCOUNTERROR      TachoRequestResponseUploadFtpStatus = "INVALID_ACCOUNT_ERROR"
	TachoRequestResponseUploadFtpStatusNOTAUTHORIZEDFORROADSOFT TachoRequestResponseUploadFtpStatus = "NOT_AUTHORIZED_FOR_ROAD_SOFT"
	TachoRequestResponseUploadFtpStatusNOTAUTHORIZEDFORVDO      TachoRequestResponseUploadFtpStatus = "NOT_AUTHORIZED_FOR_VDO"
	TachoRequestResponseUploadFtpStatusUNKNOWN                  TachoRequestResponseUploadFtpStatus = "UNKNOWN"
	TachoRequestResponseUploadFtpStatusUPLOADED                 TachoRequestResponseUploadFtpStatus = "UPLOADED"
)

// Defines values for TachoRequestResponseUploadRoadSoftStatus.
const (
	TachoRequestResponseUploadRoadSoftStatusACCOUNTNOTVALIDDMMERROR  TachoRequestResponseUploadRoadSoftStatus = "ACCOUNT_NOT_VALID_DMM_ERROR"
	TachoRequestResponseUploadRoadSoftStatusERROR                    TachoRequestResponseUploadRoadSoftStatus = "ERROR"
	TachoRequestResponseUploadRoadSoftStatusFILEALREADYEXISTSERROR   TachoRequestResponseUploadRoadSoftStatus = "FILE_ALREADY_EXISTS_ERROR"
	TachoRequestResponseUploadRoadSoftStatusINPROGRESS               TachoRequestResponseUploadRoadSoftStatus = "IN_PROGRESS"
	TachoRequestResponseUploadRoadSoftStatusINVALIDACCOUNTERROR      TachoRequestResponseUploadRoadSoftStatus = "INVALID_ACCOUNT_ERROR"
	TachoRequestResponseUploadRoadSoftStatusNOTAUTHORIZEDFORROADSOFT TachoRequestResponseUploadRoadSoftStatus = "NOT_AUTHORIZED_FOR_ROAD_SOFT"
	TachoRequestResponseUploadRoadSoftStatusNOTAUTHORIZEDFORVDO      TachoRequestResponseUploadRoadSoftStatus = "NOT_AUTHORIZED_FOR_VDO"
	TachoRequestResponseUploadRoadSoftStatusUNKNOWN                  TachoRequestResponseUploadRoadSoftStatus = "UNKNOWN"
	TachoRequestResponseUploadRoadSoftStatusUPLOADED                 TachoRequestResponseUploadRoadSoftStatus = "UPLOADED"
)

// Defines values for TachoRequestResponseUploadTisWebStatus.
const (
	TachoRequestResponseUploadTisWebStatusACCOUNTNOTVALIDDMMERROR  TachoRequestResponseUploadTisWebStatus = "ACCOUNT_NOT_VALID_DMM_ERROR"
	TachoRequestResponseUploadTisWebStatusERROR                    TachoRequestResponseUploadTisWebStatus = "ERROR"
	TachoRequestResponseUploadTisWebStatusFILEALREADYEXISTSERROR   TachoRequestResponseUploadTisWebStatus = "FILE_ALREADY_EXISTS_ERROR"
	TachoRequestResponseUploadTisWebStatusINPROGRESS               TachoRequestResponseUploadTisWebStatus = "IN_PROGRESS"
	TachoRequestResponseUploadTisWebStatusINVALIDACCOUNTERROR      TachoRequestResponseUploadTisWebStatus = "INVALID_ACCOUNT_ERROR"
	TachoRequestResponseUploadTisWebStatusNOTAUTHORIZEDFORROADSOFT TachoRequestResponseUploadTisWebStatus = "NOT_AUTHORIZED_FOR_ROAD_SOFT"
	TachoRequestResponseUploadTisWebStatusNOTAUTHORIZEDFORVDO      TachoRequestResponseUploadTisWebStatus = "NOT_AUTHORIZED_FOR_VDO"
	TachoRequestResponseUploadTisWebStatusUNKNOWN                  TachoRequestResponseUploadTisWebStatus = "UNKNOWN"
	TachoRequestResponseUploadTisWebStatusUPLOADED                 TachoRequestResponseUploadTisWebStatus = "UPLOADED"
)

// Defines values for TachoSchedulerInfoType.
const (
	TachoSchedulerInfoTypeONETIME   TachoSchedulerInfoType = "ONE_TIME"
	TachoSchedulerInfoTypeREPEATING TachoSchedulerInfoType = "REPEATING"
	TachoSchedulerInfoTypeUNKNOWN   TachoSchedulerInfoType = "UNKNOWN"
)

// Defines values for TripTripType.
const (
	TripTripTypeBUSINESS TripTripType = "BUSINESS"
	TripTripTypeNONE     TripTripType = "NONE"
	TripTripTypePRIVATE  TripTripType = "PRIVATE"
	TripTripTypeUNKNOWN  TripTripType = "UNKNOWN"
	TripTripTypeWORK     TripTripType = "WORK"
)

// Defines values for VehicleTachoScheduleRequestOptions.
const (
	VehicleTachoScheduleRequestOptionsSINCELASTDOWNLOAD        VehicleTachoScheduleRequestOptions = "SINCE_LAST_DOWNLOAD"
	VehicleTachoScheduleRequestOptionsTACHOFILEDETAILEDSPEED   VehicleTachoScheduleRequestOptions = "TACHO_FILE_DETAILED_SPEED"
	VehicleTachoScheduleRequestOptionsTACHOFILEFAULTSANDEVENTS VehicleTachoScheduleRequestOptions = "TACHO_FILE_FAULTS_AND_EVENTS"
	VehicleTachoScheduleRequestOptionsTACHOFILETECHNICALDATA   VehicleTachoScheduleRequestOptions = "TACHO_FILE_TECHNICAL_DATA"
)

// Address defines model for Address.
type Address struct {
	Country     *string `json:"country,omitempty"`
	CountryCode *string `json:"country_code,omitempty"`
	County      *string `json:"county,omitempty"`
	HouseNumber *string `json:"house_number,omitempty"`
	Locality    *string `json:"locality,omitempty"`
	Region      *string `json:"region,omitempty"`
	Street      *string `json:"street,omitempty"`
	Zip         *string `json:"zip,omitempty"`
}

// CalculatedInputs defines model for CalculatedInputs.
type CalculatedInputs struct {
	Mileage *float32 `json:"mileage,omitempty"`
}

// Coordinate defines model for Coordinate.
type Coordinate struct {
	Datetime       *time.Time                                    `json:"datetime,omitempty"`
	GeozoneIds     []string                                      `json:"geozone_ids,omitempty"`
	IgnitionStatus *CoordinateIgnitionStatus                     `json:"ignition_status,omitempty"`
	Inputs         *map[string]map[string]map[string]interface{} `json:"inputs,omitempty"`
	NearestGeozone *ExternalNearestGeozone                       `json:"nearest_geozone,omitempty"`
	ObjectID       *string                                       `json:"object_id,omitempty"`
	Position       *Position                                     `json:"position,omitempty"`
	TripType       *CoordinateTripType                           `json:"trip_type,omitempty"`
}

// CoordinateIgnitionStatus defines model for Coordinate.IgnitionStatus.
type CoordinateIgnitionStatus string

// CoordinateTripType defines model for Coordinate.TripType.
type CoordinateTripType string

// CoordinateCollection defines model for CoordinateCollection.
type CoordinateCollection struct {
	ContinuationToken *time.Time   `json:"continuation_token,omitempty"`
	Items             []Coordinate `json:"items,omitempty"`
}

// Crs defines model for Crs.
type Crs struct {
	Properties *map[string]interface{} `json:"properties,omitempty"`
	Type       *CrsType                `json:"type,omitempty"`
}

// CrsType defines model for Crs.Type.
type CrsType string

// CurrentDay defines model for CurrentDay.
type CurrentDay struct {
	Driving       *CurrentDayDrivingInfo   `json:"driving,omitempty"`
	DrivingStatus *CurrentDayDrivingStatus `json:"driving_status,omitempty"`
	Resting       *CurrentDayRestingInfo   `json:"resting,omitempty"`
	Working       *Duration                `json:"working,omitempty"`
}

// CurrentDayDrivingStatus defines model for CurrentDay.DrivingStatus.
type CurrentDayDrivingStatus string

// CurrentDayDrivingInfo defines model for CurrentDayDrivingInfo.
type CurrentDayDrivingInfo struct {
	Extra   *LimitedDuration `json:"extra,omitempty"`
	Regular *LimitedDuration `json:"regular,omitempty"`
}

// CurrentDayRestingInfo defines model for CurrentDayRestingInfo.
type CurrentDayRestingInfo struct {
	NextRest       *time.Time `json:"next_rest,omitempty"`
	RestInProgress *bool      `json:"rest_in_progress,omitempty"`
}

// CurrentDriverInfo defines model for CurrentDriverInfo.
type CurrentDriverInfo struct {
	CalculatedUntil            *time.Time                      `json:"calculated_until,omitempty"`
	CurrentDay                 *CurrentDay                     `json:"current_day,omitempty"`
	CurrentWeek                *CurrentWeek                    `json:"current_week,omitempty"`
	DataGapDuration            *Duration                       `json:"data_gap_duration,omitempty"`
	Infringements              *Infringements                  `json:"infringements,omitempty"`
	LastDriverAssignationEvent *ResponseDriverAssignationEvent `json:"last_driver_assignation_event,omitempty"`
	PreviousWeek               *PreviousWeek                   `json:"previous_week,omitempty"`
	State                      *State                          `json:"state,omitempty"`
	Type                       *CurrentDriverInfoType          `json:"type,omitempty"`
}

// CurrentDriverInfoType defines model for CurrentDriverInfo.Type.
type CurrentDriverInfoType string

// CurrentWeek defines model for CurrentWeek.
type CurrentWeek struct {
	Driving *CurrentWeekDrivingInfo `json:"driving,omitempty"`
	Resting *CurrentWeekRestingInfo `json:"resting,omitempty"`
	Working *Duration               `json:"working,omitempty"`
}

// CurrentWeekDrivingInfo defines model for CurrentWeekDrivingInfo.
type CurrentWeekDrivingInfo struct {
	Duration                    *int64        `json:"duration,omitempty"`
	DurationLimit               *int64        `json:"duration_limit,omitempty"`
	ExtendedDailyDrivingPeriods *LimitedUsage `json:"extended_daily_driving_periods,omitempty"`
}

// CurrentWeekRestingInfo defines model for CurrentWeekRestingInfo.
type CurrentWeekRestingInfo struct {
	NextRest          *time.Time    `json:"next_rest,omitempty"`
	NextRestDuration  *int64        `json:"next_rest_duration,omitempty"`
	ReducedDailyRests *LimitedUsage `json:"reduced_daily_rests,omitempty"`
	RestInProgress    *bool         `json:"rest_in_progress,omitempty"`
	StartedAt         *time.Time    `json:"started_at,omitempty"`
}

// DataInterval defines model for DataInterval.
type DataInterval struct {
	End   *time.Time `json:"end,omitempty"`
	Start *time.Time `json:"start,omitempty"`
}

// DetectedEvent defines model for DetectedEvent.
type DetectedEvent struct {
	Description *string                `json:"description,omitempty"`
	DriverID    *string                `json:"driver_id,omitempty"`
	Duration    *int64                 `json:"duration,omitempty"`
	End         *EventEnd              `json:"end,omitempty"`
	Name        *string                `json:"name,omitempty"`
	Start       *EventStart            `json:"start,omitempty"`
	TripType    *DetectedEventTripType `json:"trip_type,omitempty"`
}

// DetectedEventTripType defines model for DetectedEvent.TripType.
type DetectedEventTripType string

// DetectedEventCollection defines model for DetectedEventCollection.
type DetectedEventCollection struct {
	ContinuationToken *int32          `json:"continuation_token,omitempty"`
	Events            []DetectedEvent `json:"events,omitempty"`
}

// DeviceInputs defines model for DeviceInputs.
type DeviceInputs struct {
	DigitalInput1        *bool      `json:"digital_input_1,omitempty"`
	DigitalInput2        *bool      `json:"digital_input_2,omitempty"`
	DigitalInput3        *bool      `json:"digital_input_3,omitempty"`
	DigitalInput4        *bool      `json:"digital_input_4,omitempty"`
	FirstDriverID        *string    `json:"first_driver_id,omitempty"`
	Hdop                 *string    `json:"hdop,omitempty"`
	Ibutton              *string    `json:"ibutton,omitempty"`
	MobaNettoWeight      *int32     `json:"moba_netto_weight,omitempty"`
	MobaRfidID           *string    `json:"moba_rfid_id,omitempty"`
	MobaTimestamp        *time.Time `json:"moba_timestamp,omitempty"`
	PowerSupplyVoltage   *int32     `json:"power_supply_voltage,omitempty"`
	SecondDriverID       *string    `json:"second_driver_id,omitempty"`
	SecurityDout         *string    `json:"security_dout,omitempty"`
	TemperatureSensor0   *float32   `json:"temperature_sensor_0,omitempty"`
	TemperatureSensor0ID *string    `json:"temperature_sensor_0_id,omitempty"`
	TemperatureSensor1   *float32   `json:"temperature_sensor_1,omitempty"`
	TemperatureSensor2   *float32   `json:"temperature_sensor_2,omitempty"`
	TemperatureSensor3   *float32   `json:"temperature_sensor_3,omitempty"`
	WirelessTrailerID    *string    `json:"wireless_trailer_id,omitempty"`
}

// Driver defines model for Driver.
type Driver struct {
	Address     *string              `json:"address,omitempty"`
	FirstName   *string              `json:"first_name,omitempty"`
	ID          *string              `json:"id,omitempty"`
	Identifiers []ExternalIdentifier `json:"identifiers,omitempty"`
	LastName    *string              `json:"last_name,omitempty"`
	Phone       *string              `json:"phone,omitempty"`
}

// DriverCardTachoScheduleRequest defines model for DriverCardTachoScheduleRequest.
type DriverCardTachoScheduleRequest struct {
	ExternalObjectID string                             `json:"external_object_id"`
	RequestName      string                             `json:"request_name"`
	Slot             DriverCardTachoScheduleRequestSlot `json:"slot"`
}

// DriverCardTachoScheduleRequestSlot defines model for DriverCardTachoScheduleRequest.Slot.
type DriverCardTachoScheduleRequestSlot string

// Duration defines model for Duration.
type Duration struct {
	Duration *int64 `json:"duration,omitempty"`
}

// EventEnd defines model for EventEnd.
type EventEnd struct {
	Datetime *time.Time `json:"datetime,omitempty"`
	Location *Location  `json:"location,omitempty"`
	Mileage  *float64   `json:"mileage,omitempty"`
}

// EventStart defines model for EventStart.
type EventStart struct {
	Datetime *time.Time `json:"datetime,omitempty"`
	Location *Location  `json:"location,omitempty"`
	Mileage  *float64   `json:"mileage,omitempty"`
	Speed    *int32     `json:"speed,omitempty"`
}

// ExternalAccelerationParameters defines model for ExternalAccelerationParameters.
type ExternalAccelerationParameters struct {
	AccelerationScore           *int     `json:"acceleration_score,omitempty"`
	BadAccelerationEventCount   *float32 `json:"bad_acceleration_event_count,omitempty"`
	BadAccelerationEventRate    *float32 `json:"bad_acceleration_event_rate,omitempty"`
	GoodAccelerationEventCount  *float32 `json:"good_acceleration_event_count,omitempty"`
	GoodAccelerationEventRate   *float32 `json:"good_acceleration_event_rate,omitempty"`
	HarshAccelerationEventCount *float32 `json:"harsh_acceleration_event_count,omitempty"`
	HarshAccelerationEventRate  *float32 `json:"harsh_acceleration_event_rate,omitempty"`
	MaximumAcceleration         *float32 `json:"maximum_acceleration,omitempty"`
}

// ExternalAddress defines model for ExternalAddress.
type ExternalAddress struct {
	Country     *string `json:"country,omitempty"`
	CountryCode *string `json:"country_code,omitempty"`
	County      *string `json:"county,omitempty"`
	HouseNumber *string `json:"house_number,omitempty"`
	Locality    *string `json:"locality,omitempty"`
	Region      *string `json:"region,omitempty"`
	Street      *string `json:"street,omitempty"`
	Zip         *string `json:"zip,omitempty"`
}

// ExternalBrakingParameters defines model for ExternalBrakingParameters.
type ExternalBrakingParameters struct {
	BrakingDistance                                *float32 `json:"braking_distance,omitempty"`
	BrakingDistancePercentage                      *float32 `json:"braking_distance_percentage,omitempty"`
	BrakingDuration                                *float32 `json:"braking_duration,omitempty"`
	BrakingScore                                   *int     `json:"braking_score,omitempty"`
	EngineBrakingDistance                          *float32 `json:"engine_braking_distance,omitempty"`
	EngineBrakingDistancePercentage                *float32 `json:"engine_braking_distance_percentage,omitempty"`
	ExtremeBrakingEventCount                       *float32 `json:"extreme_braking_event_count,omitempty"`
	ExtremeBrakingEventRate                        *float32 `json:"extreme_braking_event_rate,omitempty"`
	HarshBrakingEventCount                         *float32 `json:"harsh_braking_event_count,omitempty"`
	HarshBrakingEventRate                          *float32 `json:"harsh_braking_event_rate,omitempty"`
	MaximumBraking                                 *float32 `json:"maximum_braking,omitempty"`
	NormalBrakingEventCount                        *float32 `json:"normal_braking_event_count,omitempty"`
	NormalBrakingEventRate                         *float32 `json:"normal_braking_event_rate,omitempty"`
	NormalBrakingStopsRate                         *float32 `json:"normal_braking_stops_rate,omitempty"`
	ParkingBrakeAbuseEventCount                    *float32 `json:"parking_brake_abuse_event_count,omitempty"`
	ParkingBrakeAbuseRate                          *float32 `json:"parking_brake_abuse_rate,omitempty"`
	RetarderDistance                               *float32 `json:"retarder_distance,omitempty"`
	RetarderDistancePercentage                     *float32 `json:"retarder_distance_percentage,omitempty"`
	RetarderDuration                               *float32 `json:"retarder_duration,omitempty"`
	RetarderDurationPercentage                     *float32 `json:"retarder_duration_percentage,omitempty"`
	RetarderWithoutCruiseControlDistance           *float32 `json:"retarder_without_cruise_control_distance,omitempty"`
	RetarderWithoutCruiseControlDistancePercentage *float32 `json:"retarder_without_cruise_control_distance_percentage,omitempty"`
	StopsEventCount                                *float32 `json:"stops_event_count,omitempty"`
	StopsRate                                      *float32 `json:"stops_rate,omitempty"`
}

// ExternalCircle defines model for ExternalCircle.
type ExternalCircle struct {
	Latitude  *float64 `json:"latitude,omitempty"`
	Longitude *float64 `json:"longitude,omitempty"`
	Radius    *float64 `json:"radius,omitempty"`
}

// ExternalComposedObject defines model for ExternalComposedObject.
type ExternalComposedObject struct {
	ID             *string                 `json:"id,omitempty"`
	Imei           *int64                  `json:"imei,omitempty"`
	LastCoordinate *ExternalLastCoordinate `json:"last_coordinate,omitempty"`
	Name           *string                 `json:"name,omitempty"`
	VehicleParams  *ExternalVehicleParams  `json:"vehicle_params,omitempty"`
}

// ExternalComposedObjectCollection defines model for ExternalComposedObjectCollection.
type ExternalComposedObjectCollection struct {
	ContinuationToken *string                  `json:"continuation_token,omitempty"`
	Results           []ExternalComposedObject `json:"results,omitempty"`
}

// ExternalCorneringParameters defines model for ExternalCorneringParameters.
type ExternalCorneringParameters struct {
	CorneringEventCount *float32 `json:"cornering_event_count,omitempty"`
	CorneringRate       *float32 `json:"cornering_rate,omitempty"`
	MaximumCornering    *float32 `json:"maximum_cornering,omitempty"`
}

// ExternalCountryByDriverAPIResponse defines model for ExternalCountryByDriverApiResponse.
type ExternalCountryByDriverAPIResponse struct {
	ContinuationToken *int32                       `json:"continuation_token,omitempty"`
	CountryVisits     []ExternalCountryVisitDriver `json:"country_visits,omitempty"`
	SubjectID         *string                      `json:"subject_id,omitempty"`
}

// ExternalCountryByObjectAPIResponse defines model for ExternalCountryByObjectApiResponse.
type ExternalCountryByObjectAPIResponse struct {
	ContinuationToken *int32                       `json:"continuation_token,omitempty"`
	CountryVisits     []ExternalCountryVisitObject `json:"country_visits,omitempty"`
	SubjectID         *string                      `json:"subject_id,omitempty"`
}

// ExternalCountryCoordinate defines model for ExternalCountryCoordinate.
type ExternalCountryCoordinate struct {
	Address   *Address   `json:"address,omitempty"`
	Datetime  *time.Time `json:"datetime,omitempty"`
	Latitude  *float32   `json:"latitude,omitempty"`
	Longitude *float32   `json:"longitude,omitempty"`
}

// ExternalCountryVisitDriver defines model for ExternalCountryVisitDriver.
type ExternalCountryVisitDriver struct {
	AvailableStatusDuration *int64                     `json:"available_status_duration,omitempty"`
	AverageFuelConsumption  *float32                   `json:"average_fuel_consumption,omitempty"`
	CountryCode             *string                    `json:"country_code,omitempty"`
	DrivingStatusDuration   *int64                     `json:"driving_status_duration,omitempty"`
	End                     *ExternalCountryCoordinate `json:"end,omitempty"`
	EnteredFrom             *string                    `json:"entered_from,omitempty"`
	ExitedTo                *string                    `json:"exited_to,omitempty"`
	FirstDriverIds          []string                   `json:"first_driver_ids,omitempty"`
	FuelConsumed            *float32                   `json:"fuel_consumed,omitempty"`
	IdlingDuration          *int64                     `json:"idling_duration,omitempty"`
	Mileage                 *float32                   `json:"mileage,omitempty"`
	MileageVirtual          *float32                   `json:"mileage_virtual,omitempty"`
	ObjectIds               []string                   `json:"object_ids,omitempty"`
	RestingStatusDuration   *int64                     `json:"resting_status_duration,omitempty"`
	SecondDriverIds         []string                   `json:"second_driver_ids,omitempty"`
	Start                   *ExternalCountryCoordinate `json:"start,omitempty"`
	StopDuration            *int64                     `json:"stop_duration,omitempty"`
	WorkingDuration         *int64                     `json:"working_duration,omitempty"`
	WorkingStatusDuration   *int64                     `json:"working_status_duration,omitempty"`
}

// ExternalCountryVisitObject defines model for ExternalCountryVisitObject.
type ExternalCountryVisitObject struct {
	AvailableStatusDuration *int64                     `json:"available_status_duration,omitempty"`
	AverageFuelConsumption  *float32                   `json:"average_fuel_consumption,omitempty"`
	CountryCode             *string                    `json:"country_code,omitempty"`
	DrivingStatusDuration   *int64                     `json:"driving_status_duration,omitempty"`
	End                     *ExternalCountryCoordinate `json:"end,omitempty"`
	EnteredFrom             *string                    `json:"entered_from,omitempty"`
	ExitedTo                *string                    `json:"exited_to,omitempty"`
	FirstDriverIds          []string                   `json:"first_driver_ids,omitempty"`
	FuelConsumed            *float32                   `json:"fuel_consumed,omitempty"`
	IdlingDuration          *int64                     `json:"idling_duration,omitempty"`
	Mileage                 *float32                   `json:"mileage,omitempty"`
	MileageVirtual          *float32                   `json:"mileage_virtual,omitempty"`
	ObjectIds               []string                   `json:"object_ids,omitempty"`
	RestingStatusDuration   *int64                     `json:"resting_status_duration,omitempty"`
	SecondDriverIds         []string                   `json:"second_driver_ids,omitempty"`
	Start                   *ExternalCountryCoordinate `json:"start,omitempty"`
	StopDuration            *int64                     `json:"stop_duration,omitempty"`
	WorkingDuration         *int64                     `json:"working_duration,omitempty"`
	WorkingStatusDuration   *int64                     `json:"working_status_duration,omitempty"`
}

// ExternalCruiseControlParameters defines model for ExternalCruiseControlParameters.
type ExternalCruiseControlParameters struct {
	CruiseControlCouldBeOnDistance                  *float32 `json:"cruise_control_could_be_on_distance,omitempty"`
	CruiseControlCouldBeOnDuration                  *float32 `json:"cruise_control_could_be_on_duration,omitempty"`
	CruiseControlDistance                           *float32 `json:"cruise_control_distance,omitempty"`
	CruiseControlDistanceFromAllDistancePercentage  *float32 `json:"cruise_control_distance_from_all_distance_percentage,omitempty"`
	CruiseControlDistancePercentage                 *float32 `json:"cruise_control_distance_percentage,omitempty"`
	CruiseControlDuration                           *float32 `json:"cruise_control_duration,omitempty"`
	CruiseControlDurationPercentage                 *float32 `json:"cruise_control_duration_percentage,omitempty"`
	CruiseControlFuelConsumedCount                  *float32 `json:"cruise_control_fuel_consumed_count,omitempty"`
	CruiseControlFuelConsumptionRate                *float32 `json:"cruise_control_fuel_consumption_rate,omitempty"`
	CruiseControlPercentage                         *float32 `json:"cruise_control_percentage,omitempty"`
	CruiseControlScore                              *int     `json:"cruise_control_score,omitempty"`
	CruiseControlWasOnDistance                      *float32 `json:"cruise_control_was_on_distance,omitempty"`
	CruiseControlWasOnDuration                      *float32 `json:"cruise_control_was_on_duration,omitempty"`
	CruiseControlWithAcceleratorDistance            *float32 `json:"cruise_control_with_accelerator_distance,omitempty"`
	CruiseControlWithAcceleratorDistancePercentage  *float32 `json:"cruise_control_with_accelerator_distance_percentage,omitempty"`
	CruiseControlWithAcceleratorDuration            *float32 `json:"cruise_control_with_accelerator_duration,omitempty"`
	CruiseControlWithAcceleratorDurationPercentage  *float32 `json:"cruise_control_with_accelerator_duration_percentage,omitempty"`
	CruiseControlWithAcceleratorFuelConsumedCount   *float32 `json:"cruise_control_with_accelerator_fuel_consumed_count,omitempty"`
	CruiseControlWithAcceleratorFuelConsumptionRate *float32 `json:"cruise_control_with_accelerator_fuel_consumption_rate,omitempty"`
	FreeRollingWithCruiseControlDistance            *float32 `json:"free_rolling_with_cruise_control_distance,omitempty"`
	FreeRollingWithCruiseControlDistancePercentage  *float32 `json:"free_rolling_with_cruise_control_distance_percentage,omitempty"`
	FreeRollingWithCruiseControlFuelConsumedCount   *float32 `json:"free_rolling_with_cruise_control_fuel_consumed_count,omitempty"`
	FreeRollingWithCruiseControlFuelConsumptionRate *float32 `json:"free_rolling_with_cruise_control_fuel_consumption_rate,omitempty"`
}

// ExternalDailyTime defines model for ExternalDailyTime.
type ExternalDailyTime struct {
	Date                *time.Time `json:"date,omitempty"`
	Holiday             *bool      `json:"holiday,omitempty"`
	WorkDurationAtDay   *int64     `json:"work_duration_at_day,omitempty"`
	WorkDurationAtNight *int64     `json:"work_duration_at_night,omitempty"`
}

// ExternalDriver defines model for ExternalDriver.
type ExternalDriver struct {
	FirstName  *string `json:"first_name,omitempty"`
	Identifier *string `json:"identifier,omitempty"`
	LastName   *string `json:"last_name,omitempty"`
}

// ExternalDriverContinuableList defines model for ExternalDriverContinuableList.
type ExternalDriverContinuableList struct {
	ContinuationToken *int32     `json:"continuation_token,omitempty"`
	Count             *int32     `json:"count,omitempty"`
	Items             []V2Driver `json:"items,omitempty"`
}

// ExternalDriverState defines model for ExternalDriverState.
type ExternalDriverState struct {
	Activity    *ExternalDriverStateActivity `json:"activity,omitempty"`
	Duration    *int64                       `json:"duration,omitempty"`
	EndPoint    *ExternalLatLon              `json:"end_point,omitempty"`
	EndTime     *time.Time                   `json:"end_time,omitempty"`
	ObjectID    *string                      `json:"object_id,omitempty"`
	PlateNumber *string                      `json:"plate_number,omitempty"`
	StartPoint  *ExternalLatLon              `json:"start_point,omitempty"`
	StartTime   *time.Time                   `json:"start_time,omitempty"`
}

// ExternalDriverStateActivity defines model for ExternalDriverState.Activity.
type ExternalDriverStateActivity string

// ExternalDriverStateCollection defines model for ExternalDriverStateCollection.
type ExternalDriverStateCollection struct {
	ContinuationToken *time.Time            `json:"continuation_token,omitempty"`
	DriverID          *string               `json:"driver_id,omitempty"`
	Items             []ExternalDriverState `json:"items,omitempty"`
}

// ExternalDriverTimeTable defines model for ExternalDriverTimeTable.
type ExternalDriverTimeTable struct {
	Days                   []ExternalDailyTime `json:"days,omitempty"`
	DriverName             *string             `json:"driver_name,omitempty"`
	Identifier             *string             `json:"identifier,omitempty"`
	TimeCardNumber         *string             `json:"time_card_number,omitempty"`
	TotalDayWorkingHours   *int64              `json:"total_day_working_hours,omitempty"`
	TotalNightWorkingHours *int64              `json:"total_night_working_hours,omitempty"`
	TotalWorkingHours      *int64              `json:"total_working_hours,omitempty"`
}

// ExternalDriverViolationCollection defines model for ExternalDriverViolationCollection.
type ExternalDriverViolationCollection struct {
	Items    []ExternalViolation `json:"items,omitempty"`
	NextPage *int32              `json:"next_page,omitempty"`
}

// ExternalDriverViolationParams defines model for ExternalDriverViolationParams.
type ExternalDriverViolationParams struct {
	CardNumbers    []string                                  `json:"card_numbers,omitempty"`
	Countries      []string                                  `json:"countries,omitempty"`
	DateTimeFrom   *time.Time                                `json:"date_time_from,omitempty"`
	DateTimeTo     *time.Time                                `json:"date_time_to,omitempty"`
	PageDescriptor *PageDescriptor                           `json:"page_descriptor,omitempty"`
	Severities     []ExternalDriverViolationParamsSeverities `json:"severities,omitempty"`
	Types          []ExternalDriverViolationParamsTypes      `json:"types,omitempty"`
	Vehicles       []string                                  `json:"vehicles,omitempty"`
}

// ExternalDriverViolationParamsSeverities defines model for ExternalDriverViolationParams.Severities.
type ExternalDriverViolationParamsSeverities string

// ExternalDriverViolationParamsTypes defines model for ExternalDriverViolationParams.Types.
type ExternalDriverViolationParamsTypes string

// ExternalEcodrivingParameters defines model for ExternalEcodrivingParameters.
type ExternalEcodrivingParameters struct {
	AccelerationParameters  *ExternalAccelerationParameters  `json:"acceleration_parameters,omitempty"`
	BrakingParameters       *ExternalBrakingParameters       `json:"braking_parameters,omitempty"`
	CorneringParameters     *ExternalCorneringParameters     `json:"cornering_parameters,omitempty"`
	CruiseControlParameters *ExternalCruiseControlParameters `json:"cruise_control_parameters,omitempty"`
	EngineParameters        *ExternalEngineParameters        `json:"engine_parameters,omitempty"`
	IdlingParameters        *ExternalIdlingParameters        `json:"idling_parameters,omitempty"`
	MainParameters          *ExternalMainParameters          `json:"main_parameters,omitempty"`
	SpeedParameters         *ExternalSpeedParameters         `json:"speed_parameters,omitempty"`
}

// ExternalEcodrivingSubjectParameters defines model for ExternalEcodrivingSubjectParameters.
type ExternalEcodrivingSubjectParameters struct {
	Parameters *ExternalEcodrivingParameters `json:"parameters,omitempty"`
	SubjectID  *string                       `json:"subject_id,omitempty"`
}

// ExternalEngineParameters defines model for ExternalEngineParameters.
type ExternalEngineParameters struct {
	EngineOverloadedDistance                           *float32 `json:"engine_overloaded_distance,omitempty"`
	EngineOverloadedDistancePercentage                 *float32 `json:"engine_overloaded_distance_percentage,omitempty"`
	EngineOverloadedFuelConsumedCount                  *float32 `json:"engine_overloaded_fuel_consumed_count,omitempty"`
	EngineOverloadedFuelConsumptionRate                *float32 `json:"engine_overloaded_fuel_consumption_rate,omitempty"`
	EngineScore                                        *int     `json:"engine_score,omitempty"`
	FreeRollingDistance                                *float32 `json:"free_rolling_distance,omitempty"`
	FreeRollingDistancePercentage                      *float32 `json:"free_rolling_distance_percentage,omitempty"`
	FreeRollingWithoutCruiseControlDistance            *float32 `json:"free_rolling_without_cruise_control_distance,omitempty"`
	FreeRollingWithoutCruiseControlDistancePercentage  *float32 `json:"free_rolling_without_cruise_control_distance_percentage,omitempty"`
	FreeRollingWithoutCruiseControlFuelConsumedCount   *float32 `json:"free_rolling_without_cruise_control_fuel_consumed_count,omitempty"`
	FreeRollingWithoutCruiseControlFuelConsumptionRate *float32 `json:"free_rolling_without_cruise_control_fuel_consumption_rate,omitempty"`
	HighestGearDistance                                *float32 `json:"highest_gear_distance,omitempty"`
	HighestGearDistancePercentage                      *float32 `json:"highest_gear_distance_percentage,omitempty"`
	HighestGearFuelConsumedCount                       *float32 `json:"highest_gear_fuel_consumed_count,omitempty"`
	HighestGearFuelConsumptionRate                     *float32 `json:"highest_gear_fuel_consumption_rate,omitempty"`
	MaximumRpm                                         *float32 `json:"maximum_rpm,omitempty"`
	RpmInGreenBandDistance                             *float32 `json:"rpm_in_green_band_distance,omitempty"`
	RpmInRedBandDistance                               *float32 `json:"rpm_in_red_band_distance,omitempty"`
	RpmInRedBandDistancePercentage                     *float32 `json:"rpm_in_red_band_distance_percentage,omitempty"`
	RpmInRedBandDuration                               *float32 `json:"rpm_in_red_band_duration,omitempty"`
	RpmInRedBandPercentage                             *float32 `json:"rpm_in_red_band_percentage,omitempty"`
	RpmRange1ConsumptionRate                           *float32 `json:"rpm_range1_consumption_rate,omitempty"`
	RpmRange1Distance                                  *float32 `json:"rpm_range1_distance,omitempty"`
	RpmRange1DistancePercentage                        *float32 `json:"rpm_range1_distance_percentage,omitempty"`
	RpmRange1FuelConsumedCount                         *float32 `json:"rpm_range1_fuel_consumed_count,omitempty"`
	RpmRange2ConsumptionRate                           *float32 `json:"rpm_range2_consumption_rate,omitempty"`
	RpmRange2Distance                                  *float32 `json:"rpm_range2_distance,omitempty"`
	RpmRange2DistancePercentage                        *float32 `json:"rpm_range2_distance_percentage,omitempty"`
	RpmRange2FuelConsumedCount                         *float32 `json:"rpm_range2_fuel_consumed_count,omitempty"`
	RpmRange3ConsumptionRate                           *float32 `json:"rpm_range3_consumption_rate,omitempty"`
	RpmRange3Distance                                  *float32 `json:"rpm_range3_distance,omitempty"`
	RpmRange3DistancePercentage                        *float32 `json:"rpm_range3_distance_percentage,omitempty"`
	RpmRange3FuelConsumedCount                         *float32 `json:"rpm_range3_fuel_consumed_count,omitempty"`
	RpmRange4ConsumptionRate                           *float32 `json:"rpm_range4_consumption_rate,omitempty"`
	RpmRange4Distance                                  *float32 `json:"rpm_range4_distance,omitempty"`
	RpmRange4DistancePercentage                        *float32 `json:"rpm_range4_distance_percentage,omitempty"`
	RpmRange4FuelConsumedCount                         *float32 `json:"rpm_range4_fuel_consumed_count,omitempty"`
}

// ExternalFactualProperty defines model for ExternalFactualProperty.
type ExternalFactualProperty struct {
	Type  *ExternalFactualPropertyType `json:"type,omitempty"`
	Value *string                      `json:"value,omitempty"`
}

// ExternalFactualPropertyType defines model for ExternalFactualProperty.Type.
type ExternalFactualPropertyType string

// ExternalFuelEvent defines model for ExternalFuelEvent.
type ExternalFuelEvent struct {
	Difference     *float32                    `json:"difference,omitempty"`
	DriverID       *string                     `json:"driver_id,omitempty"`
	EndDate        *time.Time                  `json:"end_date,omitempty"`
	EventType      *ExternalFuelEventEventType `json:"event_type,omitempty"`
	FuelLevelEnd   *float32                    `json:"fuel_level_end,omitempty"`
	FuelLevelStart *float32                    `json:"fuel_level_start,omitempty"`
	Latitude       *float64                    `json:"latitude,omitempty"`
	Longitude      *float64                    `json:"longitude,omitempty"`
	ObjectID       *string                     `json:"object_id,omitempty"`
	StartDate      *time.Time                  `json:"start_date,omitempty"`
}

// ExternalFuelEventEventType defines model for ExternalFuelEvent.EventType.
type ExternalFuelEventEventType string

// ExternalFuelEventsCollection defines model for ExternalFuelEventsCollection.
type ExternalFuelEventsCollection struct {
	ContinuationToken *int32              `json:"continuation_token,omitempty"`
	Items             []ExternalFuelEvent `json:"items,omitempty"`
}

// ExternalGeozone defines model for ExternalGeozone.
type ExternalGeozone struct {
	Circle  *ExternalCircle      `json:"circle,omitempty"`
	Feature *Feature             `json:"feature,omitempty"`
	ID      *string              `json:"id,omitempty"`
	Name    *string              `json:"name,omitempty"`
	Notes   *string              `json:"notes,omitempty"`
	Type    *ExternalGeozoneType `json:"type,omitempty"`
}

// ExternalGeozoneType defines model for ExternalGeozone.Type.
type ExternalGeozoneType string

// ExternalGeozoneCollection defines model for ExternalGeozoneCollection.
type ExternalGeozoneCollection struct {
	ContinuationToken *int32            `json:"continuation_token,omitempty"`
	Items             []ExternalGeozone `json:"items,omitempty"`
}

// ExternalGeozoneVisitByObject defines model for ExternalGeozoneVisitByObject.
type ExternalGeozoneVisitByObject struct {
	GeozoneID *string                        `json:"geozone_id,omitempty"`
	ObjectID  *string                        `json:"object_id,omitempty"`
	VisitData []ExternalGeozoneVisitDataItem `json:"visit_data,omitempty"`
}

// ExternalGeozoneVisitCollection defines model for ExternalGeozoneVisitCollection.
type ExternalGeozoneVisitCollection struct {
	ContinuationToken *int32                         `json:"continuation_token,omitempty"`
	Items             []ExternalGeozoneVisitByObject `json:"items,omitempty"`
}

// ExternalGeozoneVisitDataItem defines model for ExternalGeozoneVisitDataItem.
type ExternalGeozoneVisitDataItem struct {
	Datetime     *time.Time                             `json:"datetime,omitempty"`
	Direction    *ExternalGeozoneVisitDataItemDirection `json:"direction,omitempty"`
	FuelConsumed *float64                               `json:"fuel_consumed,omitempty"`
	FuelLevel    *float64                               `json:"fuel_level,omitempty"`
	Latitude     *float64                               `json:"latitude,omitempty"`
	Longitude    *float64                               `json:"longitude,omitempty"`
	Mileage      *float64                               `json:"mileage,omitempty"`
}

// ExternalGeozoneVisitDataItemDirection defines model for ExternalGeozoneVisitDataItem.Direction.
type ExternalGeozoneVisitDataItemDirection string

// ExternalGeozoneVisitParameters defines model for ExternalGeozoneVisitParameters.
type ExternalGeozoneVisitParameters struct {
	ContinuationToken *int32     `json:"continuation_token,omitempty"`
	FromDatetime      *time.Time `json:"from_datetime,omitempty"`
	GeozoneIds        []string   `json:"geozone_ids,omitempty"`
	Limit             *int32     `json:"limit,omitempty"`
	ObjectIds         []string   `json:"object_ids,omitempty"`
	ToDatetime        *time.Time `json:"to_datetime,omitempty"`
}

// ExternalIdentifier defines model for ExternalIdentifier.
type ExternalIdentifier struct {
	Identifier *string                 `json:"identifier,omitempty"`
	Type       *ExternalIdentifierType `json:"type,omitempty"`
}

// ExternalIdentifierType defines model for ExternalIdentifier.Type.
type ExternalIdentifierType string

// ExternalIdlingParameters defines model for ExternalIdlingParameters.
type ExternalIdlingParameters struct {
	ExcessIdlingPercentage        *float32 `json:"excess_idling_percentage,omitempty"`
	FuelUsedWhileIdlingPercentage *float32 `json:"fuel_used_while_idling_percentage,omitempty"`
	IdlingDuration                *float32 `json:"idling_duration,omitempty"`
	IdlingFuelConsumedCount       *float32 `json:"idling_fuel_consumed_count,omitempty"`
	IdlingScore                   *int     `json:"idling_score,omitempty"`
}

// ExternalLastCoordinate defines model for ExternalLastCoordinate.
type ExternalLastCoordinate struct {
	Altitude             *int32     `json:"altitude,omitempty"`
	Datetime             *time.Time `json:"datetime,omitempty"`
	Direction            *int32     `json:"direction,omitempty"`
	LastValidGpsDatetime *time.Time `json:"last_valid_gps_datetime,omitempty"`
	Latitude             *float64   `json:"latitude,omitempty"`
	Longitude            *float64   `json:"longitude,omitempty"`
	SatellitesCount      *int32     `json:"satellites_count,omitempty"`
	ServerDatetime       *time.Time `json:"server_datetime,omitempty"`
	Speed                *int32     `json:"speed,omitempty"`
}

// ExternalLatLon defines model for ExternalLatLon.
type ExternalLatLon struct {
	Lat *float64 `json:"lat,omitempty"`
	Lon *float64 `json:"lon,omitempty"`
}

// ExternalMainParameters defines model for ExternalMainParameters.
type ExternalMainParameters struct {
	AverageGradient         *float32 `json:"average_gradient,omitempty"`
	AverageTurningAngle     *float32 `json:"average_turning_angle,omitempty"`
	AverageWeight           *float32 `json:"average_weight,omitempty"`
	Distance                *float32 `json:"distance,omitempty"`
	DrivingDuration         *float32 `json:"driving_duration,omitempty"`
	FuelConsumedCount       *float32 `json:"fuel_consumed_count,omitempty"`
	FuelConsumptionByWeight *float32 `json:"fuel_consumption_by_weight,omitempty"`
	FuelConsumptionRate     *float32 `json:"fuel_consumption_rate,omitempty"`
	TotalScore              *int     `json:"total_score,omitempty"`
}

// ExternalNearestGeozone defines model for ExternalNearestGeozone.
type ExternalNearestGeozone struct {
	Distance *int32  `json:"distance,omitempty"`
	ID       *string `json:"id,omitempty"`
}

// ExternalObjectEntity defines model for ExternalObjectEntity.
type ExternalObjectEntity struct {
	ID   *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// ExternalObjectEntityCreate defines model for ExternalObjectEntityCreate.
type ExternalObjectEntityCreate struct {
	ID *string `json:"id,omitempty"`
}

// ExternalObjectGroup defines model for ExternalObjectGroup.
type ExternalObjectGroup struct {
	ID         *string  `json:"id,omitempty"`
	Name       *string  `json:"name,omitempty"`
	ObjectsIds []string `json:"objects_ids,omitempty"`
}

// ExternalObjectGroupCollection defines model for ExternalObjectGroupCollection.
type ExternalObjectGroupCollection struct {
	ContinuationToken *int32                `json:"continuation_token,omitempty"`
	Items             []ExternalObjectGroup `json:"items,omitempty"`
}

// ExternalShareLink defines model for ExternalShareLink.
type ExternalShareLink struct {
	CreatedAt       *time.Time             `json:"created_at,omitempty"`
	CreatedByUserID *string                `json:"created_by_user_id,omitempty"`
	Domain          *string                `json:"domain,omitempty"`
	ExpiresAt       *time.Time             `json:"expires_at,omitempty"`
	ID              *string                `json:"id,omitempty"`
	Objects         []ExternalObjectEntity `json:"objects,omitempty"`
	UpdatedAt       *time.Time             `json:"updated_at,omitempty"`
	ValidFrom       *time.Time             `json:"valid_from,omitempty"`
}

// ExternalShareLinkCollection defines model for ExternalShareLinkCollection.
type ExternalShareLinkCollection struct {
	ContinuationToken *int32              `json:"continuation_token,omitempty"`
	Items             []ExternalShareLink `json:"items,omitempty"`
}

// ExternalShareLinkCreate defines model for ExternalShareLinkCreate.
type ExternalShareLinkCreate struct {
	ExpiresAt *time.Time                   `json:"expires_at,omitempty"`
	Objects   []ExternalObjectEntityCreate `json:"objects,omitempty"`
	ValidFrom *time.Time                   `json:"valid_from,omitempty"`
}

// ExternalShareLinkUpdate defines model for ExternalShareLinkUpdate.
type ExternalShareLinkUpdate struct {
	ExpiresAt *time.Time `json:"expires_at,omitempty"`
	ValidFrom *time.Time `json:"valid_from,omitempty"`
}

// ExternalSpeedParameters defines model for ExternalSpeedParameters.
type ExternalSpeedParameters struct {
	AverageDrivingSpeed             *float32 `json:"average_driving_speed,omitempty"`
	AverageSpeed                    *float32 `json:"average_speed,omitempty"`
	MaximumSpeed                    *float32 `json:"maximum_speed,omitempty"`
	NormalSpeedDistance             *float32 `json:"normal_speed_distance,omitempty"`
	OverspeedingDistance            *float32 `json:"overspeeding_distance,omitempty"`
	OverspeedingDistancePercentage  *float32 `json:"overspeeding_distance_percentage,omitempty"`
	OverspeedingDuration            *float32 `json:"overspeeding_duration,omitempty"`
	OverspeedingFuelConsumedCount   *float32 `json:"overspeeding_fuel_consumed_count,omitempty"`
	OverspeedingFuelConsumptionRate *float32 `json:"overspeeding_fuel_consumption_rate,omitempty"`
	OverspeedingPercentage          *float32 `json:"overspeeding_percentage,omitempty"`
	SpeedScore                      *int     `json:"speed_score,omitempty"`
}

// ExternalUser defines model for ExternalUser.
type ExternalUser struct {
	Email    *string `json:"email,omitempty"`
	FullName *string `json:"full_name,omitempty"`
	ID       *string `json:"id,omitempty"`
	Phone    *string `json:"phone,omitempty"`
}

// ExternalVehicleParams defines model for ExternalVehicleParams.
type ExternalVehicleParams struct {
	AverageFuelConsumption *float32                       `json:"average_fuel_consumption,omitempty"`
	FuelTankCapacity       *float32                       `json:"fuel_tank_capacity,omitempty"`
	FuelType               *ExternalVehicleParamsFuelType `json:"fuel_type,omitempty"`
	Make                   *string                        `json:"make,omitempty"`
	Model                  *string                        `json:"model,omitempty"`
	PlateNumber            *string                        `json:"plate_number,omitempty"`
	VIN                    *string                        `json:"vin,omitempty"`
}

// ExternalVehicleParamsFuelType defines model for ExternalVehicleParams.FuelType.
type ExternalVehicleParamsFuelType string

// ExternalViolation defines model for ExternalViolation.
type ExternalViolation struct {
	CountryCode *string                    `json:"country_code,omitempty"`
	DateTime    *time.Time                 `json:"date_time,omitempty"`
	Driver      *ExternalDriver            `json:"driver,omitempty"`
	Facts       []ExternalFactualProperty  `json:"facts,omitempty"`
	Severity    *ExternalViolationSeverity `json:"severity,omitempty"`
	Type        *ExternalViolationType     `json:"type,omitempty"`
	Vehicle     *string                    `json:"vehicle,omitempty"`
}

// ExternalViolationSeverity defines model for ExternalViolation.Severity.
type ExternalViolationSeverity string

// ExternalViolationType defines model for ExternalViolation.Type.
type ExternalViolationType string

// Feature defines model for Feature.
type Feature struct {
	Bbox       []float64               `json:"bbox,omitempty"`
	Crs        *Crs                    `json:"crs,omitempty"`
	Geometry   *GeoJSONObject          `json:"geometry,omitempty"`
	ID         *string                 `json:"id,omitempty"`
	Properties *map[string]interface{} `json:"properties,omitempty"`
}

// FluxCoordinate defines model for Flux_Coordinate_.
type FluxCoordinate struct {
	Prefetch *int32 `json:"prefetch,omitempty"`
}

// GeoJSONObject defines model for GeoJsonObject.
type GeoJSONObject struct {
	Bbox []float64 `json:"bbox,omitempty"`
	Crs  *Crs      `json:"crs,omitempty"`
}

// Infringements defines model for Infringements.
type Infringements struct {
	DailyDrivingLimitExceeded  *Duration `json:"daily_driving_limit_exceeded,omitempty"`
	WeeklyDrivingLimitExceeded *Duration `json:"weekly_driving_limit_exceeded,omitempty"`
}

// LimitedDuration defines model for LimitedDuration.
type LimitedDuration struct {
	Duration      *int64 `json:"duration,omitempty"`
	DurationLimit *int64 `json:"duration_limit,omitempty"`
}

// LimitedUsage defines model for LimitedUsage.
type LimitedUsage struct {
	UsageLimit *int64 `json:"usage_limit,omitempty"`
	Used       *int64 `json:"used,omitempty"`
}

// Location defines model for Location.
type Location struct {
	Latitude  *float64 `json:"latitude,omitempty"`
	Longitude *float64 `json:"longitude,omitempty"`
}

// MapStringObject defines model for Map_string_object_.
type MapStringObject map[string]map[string]interface{}

// Object defines model for Object.
type Object struct {
	ID            *string                `json:"id,omitempty"`
	Imei          *int64                 `json:"imei,omitempty"`
	Name          *string                `json:"name,omitempty"`
	VehicleParams *ExternalVehicleParams `json:"vehicle_params,omitempty"`
}

// PageDescriptor defines model for PageDescriptor.
type PageDescriptor struct {
	Page *int32 `json:"page,omitempty"`
	Size *int32 `json:"size,omitempty"`
}

// Position defines model for Position.
type Position struct {
	Altitude        *int32   `json:"altitude,omitempty"`
	Direction       *int32   `json:"direction,omitempty"`
	Latitude        *float64 `json:"latitude,omitempty"`
	Longitude       *float64 `json:"longitude,omitempty"`
	SatellitesCount *int32   `json:"satellites_count,omitempty"`
	Speed           *int32   `json:"speed,omitempty"`
}

// PreviousWeek defines model for PreviousWeek.
type PreviousWeek struct {
	Driving *LimitedDuration `json:"driving,omitempty"`
	Resting *Duration        `json:"resting,omitempty"`
}

// RequestDriverAssignation defines model for RequestDriverAssignation.
type RequestDriverAssignation struct {
	Datetime  *time.Time                         `json:"datetime,omitempty"`
	DriverID  *string                            `json:"driver_id,omitempty"`
	EventType *RequestDriverAssignationEventType `json:"event_type,omitempty"`
	ObjectID  *string                            `json:"object_id,omitempty"`
}

// RequestDriverAssignationEventType defines model for RequestDriverAssignation.EventType.
type RequestDriverAssignationEventType string

// ResponseDriverAssignationEvent defines model for ResponseDriverAssignationEvent.
type ResponseDriverAssignationEvent struct {
	Datetime  *time.Time                               `json:"datetime,omitempty"`
	DriverID  *string                                  `json:"driver_id,omitempty"`
	EventType *ResponseDriverAssignationEventEventType `json:"event_type,omitempty"`
	ObjectID  *string                                  `json:"object_id,omitempty"`
}

// ResponseDriverAssignationEventEventType defines model for ResponseDriverAssignationEvent.EventType.
type ResponseDriverAssignationEventEventType string

// ResponseEntity defines model for ResponseEntity.
type ResponseEntity struct {
	Body            *map[string]interface{}   `json:"body,omitempty"`
	StatusCode      *ResponseEntityStatusCode `json:"status_code,omitempty"`
	StatusCodeValue *int32                    `json:"status_code_value,omitempty"`
}

// ResponseEntityStatusCode defines model for ResponseEntity.StatusCode.
type ResponseEntityStatusCode string

// SortDescriptor defines model for SortDescriptor.
type SortDescriptor struct {
	Direction  *SortDescriptorDirection  `json:"direction,omitempty"`
	Identifier *SortDescriptorIdentifier `json:"identifier,omitempty"`
}

// SortDescriptorDirection defines model for SortDescriptor.Direction.
type SortDescriptorDirection string

// SortDescriptorIdentifier defines model for SortDescriptor.Identifier.
type SortDescriptorIdentifier string

// State defines model for State.
type State struct {
	Activity  *StateActivity `json:"activity,omitempty"`
	Duration  *int64         `json:"duration,omitempty"`
	StartedAt *time.Time     `json:"started_at,omitempty"`
}

// StateActivity defines model for State.Activity.
type StateActivity string

// TachoDriverInfo defines model for TachoDriverInfo.
type TachoDriverInfo struct {
	CardNumber *string `json:"card_number,omitempty"`
	FirstName  *string `json:"first_name,omitempty"`
	LastName   *string `json:"last_name,omitempty"`
}

// TachoFilterRequest defines model for TachoFilterRequest.
type TachoFilterRequest struct {
	CardNumbers            []string                                   `json:"card_numbers,omitempty"`
	CreatedAtFrom          *time.Time                                 `json:"created_at_from,omitempty"`
	CreatedAtTo            *time.Time                                 `json:"created_at_to,omitempty"`
	Errors                 []TachoFilterRequestErrors                 `json:"errors,omitempty"`
	FtpUploadStatuses      []TachoFilterRequestFtpUploadStatuses      `json:"ftp_upload_statuses,omitempty"`
	ObjectIds              []string                                   `json:"object_ids,omitempty"`
	PageDescriptor         *PageDescriptor                            `json:"page_descriptor,omitempty"`
	RequestIds             []string                                   `json:"request_ids,omitempty"`
	RoadsoftUploadStatuses []TachoFilterRequestRoadsoftUploadStatuses `json:"roadsoft_upload_statuses,omitempty"`
	SortDescriptor         *SortDescriptor                            `json:"sort_descriptor,omitempty"`
	Statuses               []TachoFilterRequestStatuses               `json:"statuses,omitempty"`
	TiswebUploadStatuses   []TachoFilterRequestTiswebUploadStatuses   `json:"tisweb_upload_statuses,omitempty"`
	Types                  []TachoFilterRequestTypes                  `json:"types,omitempty"`
	UpdatedAtFrom          *time.Time                                 `json:"updated_at_from,omitempty"`
	UpdatedAtTo            *time.Time                                 `json:"updated_at_to,omitempty"`
}

// TachoFilterRequestErrors defines model for TachoFilterRequest.Errors.
type TachoFilterRequestErrors string

// TachoFilterRequestFtpUploadStatuses defines model for TachoFilterRequest.FtpUploadStatuses.
type TachoFilterRequestFtpUploadStatuses string

// TachoFilterRequestRoadsoftUploadStatuses defines model for TachoFilterRequest.RoadsoftUploadStatuses.
type TachoFilterRequestRoadsoftUploadStatuses string

// TachoFilterRequestStatuses defines model for TachoFilterRequest.Statuses.
type TachoFilterRequestStatuses string

// TachoFilterRequestTiswebUploadStatuses defines model for TachoFilterRequest.TiswebUploadStatuses.
type TachoFilterRequestTiswebUploadStatuses string

// TachoFilterRequestTypes defines model for TachoFilterRequest.Types.
type TachoFilterRequestTypes string

// TachoObjectInfo defines model for TachoObjectInfo.
type TachoObjectInfo struct {
	ID   *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// TachoRequestDetailResponse defines model for TachoRequestDetailResponse.
type TachoRequestDetailResponse struct {
	CreatedAt        *time.Time                        `json:"created_at,omitempty"`
	DataInterval     *DataInterval                     `json:"data_interval,omitempty"`
	Error            *TachoRequestDetailResponseError  `json:"error,omitempty"`
	ExternalClientID *string                           `json:"external_client_id,omitempty"`
	ExternalObjectID *string                           `json:"external_object_id,omitempty"`
	FileName         *string                           `json:"file_name,omitempty"`
	ID               *string                           `json:"id,omitempty"`
	Status           *TachoRequestDetailResponseStatus `json:"status,omitempty"`
	Type             *TachoRequestDetailResponseType   `json:"type,omitempty"`
	UpdatedAt        *time.Time                        `json:"updated_at,omitempty"`
}

// TachoRequestDetailResponseError defines model for TachoRequestDetailResponse.Error.
type TachoRequestDetailResponseError string

// TachoRequestDetailResponseStatus defines model for TachoRequestDetailResponse.Status.
type TachoRequestDetailResponseStatus string

// TachoRequestDetailResponseType defines model for TachoRequestDetailResponse.Type.
type TachoRequestDetailResponseType string

// TachoRequestResponse defines model for TachoRequestResponse.
type TachoRequestResponse struct {
	CreatedAt            *time.Time                                `json:"created_at,omitempty"`
	DriverInfo           *TachoDriverInfo                          `json:"driver_info,omitempty"`
	Error                *TachoRequestResponseError                `json:"error,omitempty"`
	ID                   *string                                   `json:"id,omitempty"`
	ObjectInfo           *TachoObjectInfo                          `json:"object_info,omitempty"`
	Origin               *TachoRequestResponseOrigin               `json:"origin,omitempty"`
	SchedulerInfo        *TachoSchedulerInfo                       `json:"scheduler_info,omitempty"`
	Status               *TachoRequestResponseStatus               `json:"status,omitempty"`
	Type                 *TachoRequestResponseType                 `json:"type,omitempty"`
	UpdatedAt            *time.Time                                `json:"updated_at,omitempty"`
	UploadFtpStatus      *TachoRequestResponseUploadFtpStatus      `json:"upload_ftp_status,omitempty"`
	UploadRoadSoftStatus *TachoRequestResponseUploadRoadSoftStatus `json:"upload_road_soft_status,omitempty"`
	UploadTisWebStatus   *TachoRequestResponseUploadTisWebStatus   `json:"upload_tis_web_status,omitempty"`
}

// TachoRequestResponseError defines model for TachoRequestResponse.Error.
type TachoRequestResponseError string

// TachoRequestResponseOrigin defines model for TachoRequestResponse.Origin.
type TachoRequestResponseOrigin string

// TachoRequestResponseStatus defines model for TachoRequestResponse.Status.
type TachoRequestResponseStatus string

// TachoRequestResponseType defines model for TachoRequestResponse.Type.
type TachoRequestResponseType string

// TachoRequestResponseUploadFtpStatus defines model for TachoRequestResponse.UploadFtpStatus.
type TachoRequestResponseUploadFtpStatus string

// TachoRequestResponseUploadRoadSoftStatus defines model for TachoRequestResponse.UploadRoadSoftStatus.
type TachoRequestResponseUploadRoadSoftStatus string

// TachoRequestResponseUploadTisWebStatus defines model for TachoRequestResponse.UploadTisWebStatus.
type TachoRequestResponseUploadTisWebStatus string

// TachoRequestScheduleResponse defines model for TachoRequestScheduleResponse.
type TachoRequestScheduleResponse struct {
	CreatedAt *time.Time `json:"created_at,omitempty"`
	ID        *string    `json:"id,omitempty"`
}

// TachoRequestsCollectionResponse defines model for TachoRequestsCollectionResponse.
type TachoRequestsCollectionResponse struct {
	ContinuationToken *int32                 `json:"continuation_token,omitempty"`
	Items             []TachoRequestResponse `json:"items,omitempty"`
}

// TachoSchedulerInfo defines model for TachoSchedulerInfo.
type TachoSchedulerInfo struct {
	Title *string                 `json:"title,omitempty"`
	Type  *TachoSchedulerInfoType `json:"type,omitempty"`
}

// TachoSchedulerInfoType defines model for TachoSchedulerInfo.Type.
type TachoSchedulerInfoType string

// Trip defines model for Trip.
type Trip struct {
	DriverIds    []string      `json:"driver_ids,omitempty"`
	Mileage      *float64      `json:"mileage,omitempty"`
	ObjectID     *string       `json:"object_id,omitempty"`
	TripDuration *int64        `json:"trip_duration,omitempty"`
	TripEnd      *TripMetrics  `json:"trip_end,omitempty"`
	TripStart    *TripMetrics  `json:"trip_start,omitempty"`
	TripType     *TripTripType `json:"trip_type,omitempty"`
}

// TripTripType defines model for Trip.TripType.
type TripTripType string

// TripCollection defines model for TripCollection.
type TripCollection struct {
	ContinuationToken *time.Time `json:"continuation_token,omitempty"`
	Trips             []Trip     `json:"trips,omitempty"`
}

// TripMetrics defines model for TripMetrics.
type TripMetrics struct {
	Address   *Address   `json:"address,omitempty"`
	Datetime  *time.Time `json:"datetime,omitempty"`
	Latitude  *float64   `json:"latitude,omitempty"`
	Longitude *float64   `json:"longitude,omitempty"`
}

// UserCollection defines model for UserCollection.
type UserCollection struct {
	ContinuationToken *int32         `json:"continuation_token,omitempty"`
	Items             []ExternalUser `json:"items,omitempty"`
}

// VehicleTachoScheduleRequest defines model for VehicleTachoScheduleRequest.
type VehicleTachoScheduleRequest struct {
	ExternalObjectID string                               `json:"external_object_id"`
	FromDateTime     time.Time                            `json:"from_date_time"`
	Options          []VehicleTachoScheduleRequestOptions `json:"options,omitempty"`
	RequestName      string                               `json:"request_name"`
	ToDateTime       time.Time                            `json:"to_date_time"`
}

// VehicleTachoScheduleRequestOptions defines model for VehicleTachoScheduleRequest.Options.
type VehicleTachoScheduleRequestOptions string

// V2Driver defines model for v2.Driver.
type V2Driver struct {
	Address     *string                `json:"address,omitempty"`
	FirstName   *string                `json:"first_name,omitempty"`
	ID          *string                `json:"id,omitempty"`
	Identifiers []V2ExternalIdentifier `json:"identifiers,omitempty"`
	LastName    *string                `json:"last_name,omitempty"`
	Phone       *string                `json:"phone,omitempty"`
}

// V2ExternalIdentifier defines model for v2.ExternalIdentifier.
type V2ExternalIdentifier struct {
	Identifier *string `json:"identifier,omitempty"`
	Type       *string `json:"type,omitempty"`
}
